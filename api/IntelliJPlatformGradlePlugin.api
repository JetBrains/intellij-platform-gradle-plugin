public final class org/jetbrains/intellij/platform/gradle/BuildException : org/gradle/tooling/BuildException {
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/jetbrains/intellij/platform/gradle/Constants {
	public static final field CACHE_DIRECTORY Ljava/lang/String;
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/Constants;
}

public final class org/jetbrains/intellij/platform/gradle/Constants$Components {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/Constants$Components;
	public static final field INTELLIJ_PLATFORM Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/Constants$Configurations {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/Constants$Configurations;
	public static final field INTELLIJ_PLATFORM_BUNDLED_MODULES Ljava/lang/String;
	public static final field INTELLIJ_PLATFORM_BUNDLED_PLUGINS Ljava/lang/String;
	public static final field INTELLIJ_PLATFORM_CLASSPATH Ljava/lang/String;
	public static final field INTELLIJ_PLATFORM_COMPOSED_JAR Ljava/lang/String;
	public static final field INTELLIJ_PLATFORM_COMPOSED_JAR_API Ljava/lang/String;
	public static final field INTELLIJ_PLATFORM_DEPENDENCIES Ljava/lang/String;
	public static final field INTELLIJ_PLATFORM_DEPENDENCY Ljava/lang/String;
	public static final field INTELLIJ_PLATFORM_DEPENDENCY_ARCHIVE Ljava/lang/String;
	public static final field INTELLIJ_PLATFORM_DISTRIBUTION Ljava/lang/String;
	public static final field INTELLIJ_PLATFORM_JAVA_COMPILER Ljava/lang/String;
	public static final field INTELLIJ_PLATFORM_LOCAL Ljava/lang/String;
	public static final field INTELLIJ_PLATFORM_PLUGIN Ljava/lang/String;
	public static final field INTELLIJ_PLATFORM_PLUGIN_DEPENDENCY Ljava/lang/String;
	public static final field INTELLIJ_PLATFORM_PLUGIN_DEPENDENCY_COLLECTOR Ljava/lang/String;
	public static final field INTELLIJ_PLATFORM_PLUGIN_LOCAL Ljava/lang/String;
	public static final field INTELLIJ_PLATFORM_PLUGIN_MODULE Ljava/lang/String;
	public static final field INTELLIJ_PLATFORM_RUNTIME_CLASSPATH Ljava/lang/String;
	public static final field INTELLIJ_PLATFORM_TEST_CLASSPATH Ljava/lang/String;
	public static final field INTELLIJ_PLATFORM_TEST_DEPENDENCIES Ljava/lang/String;
	public static final field INTELLIJ_PLUGIN_VERIFIER Ljava/lang/String;
	public static final field INTELLIJ_PLUGIN_VERIFIER_IDES Ljava/lang/String;
	public static final field INTELLIJ_PLUGIN_VERIFIER_IDES_DEPENDENCY Ljava/lang/String;
	public static final field INTELLIJ_PLUGIN_VERIFIER_IDES_LOCAL_INSTANCE Ljava/lang/String;
	public static final field JETBRAINS_RUNTIME Ljava/lang/String;
	public static final field JETBRAINS_RUNTIME_DEPENDENCY Ljava/lang/String;
	public static final field JETBRAINS_RUNTIME_LOCAL_INSTANCE Ljava/lang/String;
	public static final field MARKETPLACE_ZIP_SIGNER Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/Constants$Configurations$Attributes {
	public static final field COMPOSED_JAR_NAME Ljava/lang/String;
	public static final field DISTRIBUTION_NAME Ljava/lang/String;
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/Constants$Configurations$Attributes;
	public final fun getCollected ()Lorg/gradle/api/attributes/Attribute;
	public final fun getExtracted ()Lorg/gradle/api/attributes/Attribute;
	public final fun getJvmEnvironment ()Lorg/gradle/api/attributes/Attribute;
	public final fun getKotlinJPlatformType ()Lorg/gradle/api/attributes/Attribute;
	public final fun getLocalPluginsNormalized ()Lorg/gradle/api/attributes/Attribute;
}

public final class org/jetbrains/intellij/platform/gradle/Constants$Configurations$Attributes$ArtifactType : java/lang/Enum {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/Constants$Configurations$Attributes$ArtifactType$Companion;
	public static final field DIRECTORY Lorg/jetbrains/intellij/platform/gradle/Constants$Configurations$Attributes$ArtifactType;
	public static final field DMG Lorg/jetbrains/intellij/platform/gradle/Constants$Configurations$Attributes$ArtifactType;
	public static final field SIT Lorg/jetbrains/intellij/platform/gradle/Constants$Configurations$Attributes$ArtifactType;
	public static final field TAR_GZ Lorg/jetbrains/intellij/platform/gradle/Constants$Configurations$Attributes$ArtifactType;
	public static final field ZIP Lorg/jetbrains/intellij/platform/gradle/Constants$Configurations$Attributes$ArtifactType;
	public fun toString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/Constants$Configurations$Attributes$ArtifactType;
	public static fun values ()[Lorg/jetbrains/intellij/platform/gradle/Constants$Configurations$Attributes$ArtifactType;
}

public final class org/jetbrains/intellij/platform/gradle/Constants$Configurations$Attributes$ArtifactType$Companion {
	public final fun from (Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/Constants$Configurations$Attributes$ArtifactType;
	public final fun getArchives ()Ljava/util/List;
}

public final class org/jetbrains/intellij/platform/gradle/Constants$Configurations$Dependencies {
	public static final field BUNDLED_MODULE_GROUP Ljava/lang/String;
	public static final field BUNDLED_PLUGIN_GROUP Ljava/lang/String;
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/Constants$Configurations$Dependencies;
	public static final field LOCAL_IDE_GROUP Ljava/lang/String;
	public static final field LOCAL_JETBRAINS_RUNTIME_GROUP Ljava/lang/String;
	public static final field LOCAL_PLUGIN_GROUP Ljava/lang/String;
	public static final field MARKETPLACE_GROUP Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/Constants$Configurations$External {
	public static final field API Ljava/lang/String;
	public static final field COMPILE_CLASSPATH Ljava/lang/String;
	public static final field COMPILE_ONLY Ljava/lang/String;
	public static final field COMPILE_ONLY_API Ljava/lang/String;
	public static final field IMPLEMENTATION Ljava/lang/String;
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/Constants$Configurations$External;
	public static final field RUNTIME_CLASSPATH Ljava/lang/String;
	public static final field RUNTIME_ELEMENTS Ljava/lang/String;
	public static final field RUNTIME_ONLY Ljava/lang/String;
	public static final field TEST_COMPILE_CLASSPATH Ljava/lang/String;
	public static final field TEST_FIXTURES_COMPILE_CLASSPATH Ljava/lang/String;
	public static final field TEST_FIXTURES_COMPILE_ONLY Ljava/lang/String;
	public static final field TEST_IMPLEMENTATION Ljava/lang/String;
	public static final field TEST_RUNTIME_CLASSPATH Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/Constants$Constraints {
	public static final field CLOSEST_VERSION Ljava/lang/String;
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/Constants$Constraints;
	public static final field LATEST_VERSION Ljava/lang/String;
	public static final field PLATFORM_VERSION Ljava/lang/String;
	public final fun getMINIMAL_GRADLE_VERSION ()Lorg/gradle/util/GradleVersion;
	public final fun getMINIMAL_INTELLIJ_PLATFORM_BUILD_NUMBER ()Lorg/jetbrains/intellij/platform/gradle/utils/Version;
	public final fun getMINIMAL_INTELLIJ_PLATFORM_VERSION ()Lorg/jetbrains/intellij/platform/gradle/utils/Version;
	public final fun getMINIMAL_SPLIT_MODE_BUILD_NUMBER ()Lorg/jetbrains/intellij/platform/gradle/utils/Version;
}

public final class org/jetbrains/intellij/platform/gradle/Constants$Extensions {
	public static final field IDEA_VERSION Ljava/lang/String;
	public static final field IDES Ljava/lang/String;
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/Constants$Extensions;
	public static final field INTELLIJ_PLATFORM Ljava/lang/String;
	public static final field INTELLIJ_PLATFORM_TESTING Ljava/lang/String;
	public static final field PLUGINS Ljava/lang/String;
	public static final field PLUGIN_CONFIGURATION Ljava/lang/String;
	public static final field PLUGIN_VERIFICATION Ljava/lang/String;
	public static final field PRODUCT_DESCRIPTOR Ljava/lang/String;
	public static final field PUBLISHING Ljava/lang/String;
	public static final field SIGNING Ljava/lang/String;
	public static final field VENDOR Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/Constants$Locations {
	public static final field ANDROID_STUDIO_INSTALLERS Ljava/lang/String;
	public static final field CACHE_REDIRECTOR Ljava/lang/String;
	public static final field CACHE_REDIRECTOR_INTELLIJ_DEPENDENCIES_REPOSITORY Ljava/lang/String;
	public static final field CACHE_REDIRECTOR_INTELLIJ_REPOSITORY_NIGHTLY Ljava/lang/String;
	public static final field CACHE_REDIRECTOR_INTELLIJ_REPOSITORY_RELEASES Ljava/lang/String;
	public static final field CACHE_REDIRECTOR_INTELLIJ_REPOSITORY_SNAPSHOTS Ljava/lang/String;
	public static final field CACHE_REDIRECTOR_JETBRAINS_RUNTIME_REPOSITORY Ljava/lang/String;
	public static final field CACHE_REDIRECTOR_MARKETPLACE_REPOSITORY Ljava/lang/String;
	public static final field GITHUB_REPOSITORY Ljava/lang/String;
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/Constants$Locations;
	public static final field INTELLIJ_DEPENDENCIES_REPOSITORY Ljava/lang/String;
	public static final field INTELLIJ_REPOSITORY_NIGHTLY Ljava/lang/String;
	public static final field INTELLIJ_REPOSITORY_RELEASES Ljava/lang/String;
	public static final field INTELLIJ_REPOSITORY_SNAPSHOTS Ljava/lang/String;
	public static final field JETBRAINS_IDES_INSTALLERS Ljava/lang/String;
	public static final field JETBRAINS_MARKETPLACE Ljava/lang/String;
	public static final field MARKETPLACE_REPOSITORY Ljava/lang/String;
	public static final field MAVEN_GRADLE_PLUGIN_PORTAL_REPOSITORY Ljava/lang/String;
	public static final field MAVEN_REPOSITORY Ljava/lang/String;
	public static final field PRODUCTS_RELEASES_ANDROID_STUDIO Ljava/lang/String;
	public static final field PRODUCTS_RELEASES_JETBRAINS_IDES Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/Constants$Plugin {
	public static final field GROUP_NAME Ljava/lang/String;
	public static final field ID Ljava/lang/String;
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/Constants$Plugin;
	public static final field NAME Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/Constants$Plugins {
	public static final field BASE Ljava/lang/String;
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/Constants$Plugins;
	public static final field MODULE Ljava/lang/String;
	public static final field SETTINGS Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/Constants$Plugins$External {
	public static final field IDEA Ljava/lang/String;
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/Constants$Plugins$External;
	public static final field JAVA_TEST_FIXTURES Ljava/lang/String;
	public static final field KOTLIN Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/Constants$Sandbox {
	public static final field CONFIG Ljava/lang/String;
	public static final field CONTAINER Ljava/lang/String;
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/Constants$Sandbox;
	public static final field LOG Ljava/lang/String;
	public static final field PLUGINS Ljava/lang/String;
	public static final field SYSTEM Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/Constants$Sandbox$Plugin {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/Constants$Sandbox$Plugin;
	public static final field LIB Ljava/lang/String;
	public static final field LIB_MODULES Ljava/lang/String;
	public static final field MODULES Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/Constants$Tasks {
	public static final field BUILD_PLUGIN Ljava/lang/String;
	public static final field BUILD_SEARCHABLE_OPTIONS Ljava/lang/String;
	public static final field COMPOSED_JAR Ljava/lang/String;
	public static final field GENERATE_MANIFEST Ljava/lang/String;
	public static final field INITIALIZE_INTELLIJ_PLATFORM_PLUGIN Ljava/lang/String;
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/Constants$Tasks;
	public static final field INSTRUMENTED_JAR Ljava/lang/String;
	public static final field INSTRUMENT_CODE Ljava/lang/String;
	public static final field INSTRUMENT_TEST_CODE Ljava/lang/String;
	public static final field JAR_SEARCHABLE_OPTIONS Ljava/lang/String;
	public static final field PATCH_PLUGIN_XML Ljava/lang/String;
	public static final field PREPARE_JAR_SEARCHABLE_OPTIONS Ljava/lang/String;
	public static final field PREPARE_SANDBOX Ljava/lang/String;
	public static final field PREPARE_TEST Ljava/lang/String;
	public static final field PREPARE_TEST_IDE_PERFORMANCE_SANDBOX Ljava/lang/String;
	public static final field PREPARE_TEST_SANDBOX Ljava/lang/String;
	public static final field PRINT_BUNDLED_PLUGINS Ljava/lang/String;
	public static final field PRINT_PRODUCTS_RELEASES Ljava/lang/String;
	public static final field PUBLISH_PLUGIN Ljava/lang/String;
	public static final field RUN_IDE Ljava/lang/String;
	public static final field SETUP_DEPENDENCIES Ljava/lang/String;
	public static final field SIGN_PLUGIN Ljava/lang/String;
	public static final field TEST_IDE_PERFORMANCE Ljava/lang/String;
	public static final field VERIFY_PLUGIN Ljava/lang/String;
	public static final field VERIFY_PLUGIN_PROJECT_CONFIGURATION Ljava/lang/String;
	public static final field VERIFY_PLUGIN_SIGNATURE Ljava/lang/String;
	public static final field VERIFY_PLUGIN_STRUCTURE Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/Constants$Tasks$External {
	public static final field CLEAN Ljava/lang/String;
	public static final field COMPILE_JAVA Ljava/lang/String;
	public static final field COMPILE_KOTLIN Ljava/lang/String;
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/Constants$Tasks$External;
	public static final field JAR Ljava/lang/String;
	public static final field TEST Ljava/lang/String;
}

public abstract class org/jetbrains/intellij/platform/gradle/GradleProperties {
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getDefaultValue ()Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/GradleProperties$DownloadSources : org/jetbrains/intellij/platform/gradle/GradleProperties {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/GradleProperties$DownloadSources;
}

public final class org/jetbrains/intellij/platform/gradle/GradleProperties$IntellijPlatformCache : org/jetbrains/intellij/platform/gradle/GradleProperties {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/GradleProperties$IntellijPlatformCache;
}

public final class org/jetbrains/intellij/platform/gradle/GradleProperties$LocalPlatformArtifacts : org/jetbrains/intellij/platform/gradle/GradleProperties {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/GradleProperties$LocalPlatformArtifacts;
}

public final class org/jetbrains/intellij/platform/gradle/GradleProperties$NoSearchableOptionsWarning : org/jetbrains/intellij/platform/gradle/GradleProperties {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/GradleProperties$NoSearchableOptionsWarning;
}

public final class org/jetbrains/intellij/platform/gradle/GradleProperties$PaidPluginSearchableOptionsWarning : org/jetbrains/intellij/platform/gradle/GradleProperties {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/GradleProperties$PaidPluginSearchableOptionsWarning;
}

public final class org/jetbrains/intellij/platform/gradle/GradleProperties$ProductsReleasesAndroidStudioUrl : org/jetbrains/intellij/platform/gradle/GradleProperties {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/GradleProperties$ProductsReleasesAndroidStudioUrl;
}

public final class org/jetbrains/intellij/platform/gradle/GradleProperties$ProductsReleasesJetBrainsIdesUrl : org/jetbrains/intellij/platform/gradle/GradleProperties {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/GradleProperties$ProductsReleasesJetBrainsIdesUrl;
}

public final class org/jetbrains/intellij/platform/gradle/GradleProperties$SelfUpdateCheck : org/jetbrains/intellij/platform/gradle/GradleProperties {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/GradleProperties$SelfUpdateCheck;
}

public final class org/jetbrains/intellij/platform/gradle/GradleProperties$ShimServerPort : org/jetbrains/intellij/platform/gradle/GradleProperties {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/GradleProperties$ShimServerPort;
}

public final class org/jetbrains/intellij/platform/gradle/GradleProperties$UseCacheRedirector : org/jetbrains/intellij/platform/gradle/GradleProperties {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/GradleProperties$UseCacheRedirector;
}

public abstract interface annotation class org/jetbrains/intellij/platform/gradle/IntelliJPlatform : java/lang/annotation/Annotation {
}

public final class org/jetbrains/intellij/platform/gradle/IntelliJPlatformType : java/lang/Enum {
	public static final field AndroidStudio Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
	public static final field Aqua Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
	public static final field CLion Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType$Companion;
	public static final field DataGrip Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
	public static final field DataSpell Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
	public static final field FleetBackend Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
	public static final field Gateway Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
	public static final field GoLand Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
	public static final field IntellijIdeaCommunity Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
	public static final field IntellijIdeaUltimate Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
	public static final field MPS Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
	public static final field PhpStorm Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
	public static final field PyCharmCommunity Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
	public static final field PyCharmProfessional Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
	public static final field Rider Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
	public static final field RubyMine Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
	public static final field RustRover Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
	public static final field WebStorm Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
	public static final field Writerside Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
	public final fun getCode ()Ljava/lang/String;
	public final fun getInstaller ()Lorg/jetbrains/intellij/platform/gradle/models/Coordinates;
	public final fun getMaven ()Lorg/jetbrains/intellij/platform/gradle/models/Coordinates;
	public fun toString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
	public static fun values ()[Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
}

public final class org/jetbrains/intellij/platform/gradle/IntelliJPlatformType$Companion {
	public final fun fromCode (Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
}

public abstract class org/jetbrains/intellij/platform/gradle/TestFrameworkType {
	public synthetic fun <init> ([Lorg/jetbrains/intellij/platform/gradle/models/Coordinates;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getCoordinates ()[Lorg/jetbrains/intellij/platform/gradle/models/Coordinates;
}

public final class org/jetbrains/intellij/platform/gradle/TestFrameworkType$Bundled : org/jetbrains/intellij/platform/gradle/TestFrameworkType {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/TestFrameworkType$Bundled;
}

public final class org/jetbrains/intellij/platform/gradle/TestFrameworkType$JUnit5 : org/jetbrains/intellij/platform/gradle/TestFrameworkType {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/TestFrameworkType$JUnit5;
}

public final class org/jetbrains/intellij/platform/gradle/TestFrameworkType$Metrics : org/jetbrains/intellij/platform/gradle/TestFrameworkType {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/TestFrameworkType$Metrics;
}

public final class org/jetbrains/intellij/platform/gradle/TestFrameworkType$Platform : org/jetbrains/intellij/platform/gradle/TestFrameworkType {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/TestFrameworkType$Platform;
}

public final class org/jetbrains/intellij/platform/gradle/TestFrameworkType$Plugin {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/TestFrameworkType$Plugin;
}

public final class org/jetbrains/intellij/platform/gradle/TestFrameworkType$Plugin$Go : org/jetbrains/intellij/platform/gradle/TestFrameworkType {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/TestFrameworkType$Plugin$Go;
}

public final class org/jetbrains/intellij/platform/gradle/TestFrameworkType$Plugin$Java : org/jetbrains/intellij/platform/gradle/TestFrameworkType {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/TestFrameworkType$Plugin$Java;
}

public final class org/jetbrains/intellij/platform/gradle/TestFrameworkType$Plugin$JavaScript : org/jetbrains/intellij/platform/gradle/TestFrameworkType {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/TestFrameworkType$Plugin$JavaScript;
}

public final class org/jetbrains/intellij/platform/gradle/TestFrameworkType$Plugin$Maven : org/jetbrains/intellij/platform/gradle/TestFrameworkType {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/TestFrameworkType$Plugin$Maven;
}

public final class org/jetbrains/intellij/platform/gradle/TestFrameworkType$Plugin$ReSharper : org/jetbrains/intellij/platform/gradle/TestFrameworkType {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/TestFrameworkType$Plugin$ReSharper;
}

public final class org/jetbrains/intellij/platform/gradle/TestFrameworkType$Plugin$Ruby : org/jetbrains/intellij/platform/gradle/TestFrameworkType {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/TestFrameworkType$Plugin$Ruby;
}

public final class org/jetbrains/intellij/platform/gradle/TestFrameworkType$Starter : org/jetbrains/intellij/platform/gradle/TestFrameworkType {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/TestFrameworkType$Starter;
}

public final class org/jetbrains/intellij/platform/gradle/argumentProviders/IntelliJPlatformArgumentProvider : org/gradle/process/CommandLineArgumentProvider {
	public fun <init> (Lorg/gradle/api/file/FileCollection;Lorg/gradle/api/provider/Provider;Lorg/gradle/api/provider/Provider;Lorg/gradle/process/JavaForkOptions;)V
	public synthetic fun asArguments ()Ljava/lang/Iterable;
	public fun asArguments ()Ljava/util/List;
	public final fun getCoroutinesJavaAgentFile ()Lorg/gradle/api/provider/Provider;
	public final fun getIntellijPlatformConfiguration ()Lorg/gradle/api/file/FileCollection;
	public final fun getRuntimeArchProvider ()Lorg/gradle/api/provider/Provider;
}

public final class org/jetbrains/intellij/platform/gradle/argumentProviders/PerformanceTestArgumentProvider : org/gradle/process/CommandLineArgumentProvider {
	public fun <init> (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/lang/String;)V
	public synthetic fun asArguments ()Ljava/lang/Iterable;
	public fun asArguments ()Ljava/util/List;
	public final fun getScriptPath ()Ljava/nio/file/Path;
	public final fun getTestArtifactsDirectory ()Ljava/nio/file/Path;
}

public final class org/jetbrains/intellij/platform/gradle/argumentProviders/PluginArgumentProvider : org/gradle/process/CommandLineArgumentProvider {
	public fun <init> (Lorg/gradle/api/provider/Provider;)V
	public synthetic fun asArguments ()Ljava/lang/Iterable;
	public fun asArguments ()Ljava/util/List;
	public final fun getPluginXml ()Lorg/gradle/api/provider/Provider;
}

public final class org/jetbrains/intellij/platform/gradle/argumentProviders/SandboxArgumentProvider : org/gradle/process/CommandLineArgumentProvider {
	public fun <init> (Lorg/gradle/api/file/DirectoryProperty;Lorg/gradle/api/file/DirectoryProperty;Lorg/gradle/api/file/DirectoryProperty;Lorg/gradle/api/file/DirectoryProperty;)V
	public synthetic fun asArguments ()Ljava/lang/Iterable;
	public fun asArguments ()Ljava/util/List;
	public final fun getSandboxConfigDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public final fun getSandboxLogDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public final fun getSandboxPluginsDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public final fun getSandboxSystemDirectory ()Lorg/gradle/api/file/DirectoryProperty;
}

public final class org/jetbrains/intellij/platform/gradle/argumentProviders/SplitModeArgumentProvider : org/gradle/process/CommandLineArgumentProvider {
	public fun <init> (Lorg/gradle/api/provider/Provider;)V
	public synthetic fun asArguments ()Ljava/lang/Iterable;
	public fun asArguments ()Ljava/util/List;
	public final fun getSplitMode ()Lorg/gradle/api/provider/Provider;
}

public abstract class org/jetbrains/intellij/platform/gradle/artifacts/repositories/BaseArtifactRepository : org/gradle/api/artifacts/repositories/ArtifactRepository, org/gradle/api/artifacts/repositories/UrlArtifactRepository {
	public fun <init> (Ljava/lang/String;Ljava/net/URI;Z)V
	public fun content (Lorg/gradle/api/Action;)Ljava/lang/Void;
	public synthetic fun content (Lorg/gradle/api/Action;)V
	public fun getName ()Ljava/lang/String;
	public fun getUrl ()Ljava/net/URI;
	public fun isAllowInsecureProtocol ()Z
	public fun setAllowInsecureProtocol (Z)Ljava/lang/Void;
	public synthetic fun setAllowInsecureProtocol (Z)V
	public fun setName (Ljava/lang/String;)Ljava/lang/Void;
	public synthetic fun setName (Ljava/lang/String;)V
	public fun setUrl (Ljava/lang/Object;)Ljava/lang/Void;
	public synthetic fun setUrl (Ljava/lang/Object;)V
	public fun setUrl (Ljava/net/URI;)Ljava/lang/Void;
	public synthetic fun setUrl (Ljava/net/URI;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/artifacts/repositories/PluginArtifactRepository : org/jetbrains/intellij/platform/gradle/artifacts/repositories/BaseArtifactRepository, org/gradle/api/artifacts/repositories/AuthenticationSupported {
	public fun <init> (Lorg/gradle/api/model/ObjectFactory;Lorg/gradle/internal/reflect/Instantiator;Ljava/lang/String;Ljava/net/URI;Lcom/jetbrains/plugin/structure/intellij/repository/CustomPluginRepositoryListingType;Z)V
	public fun authentication (Lorg/gradle/api/Action;)Ljava/lang/Void;
	public synthetic fun authentication (Lorg/gradle/api/Action;)V
	public fun credentials (Ljava/lang/Class;)Ljava/lang/Void;
	public synthetic fun credentials (Ljava/lang/Class;)V
	public fun credentials (Ljava/lang/Class;Lorg/gradle/api/Action;)V
	public fun credentials (Lorg/gradle/api/Action;)V
	public fun getAuthentication ()Ljava/lang/Void;
	public synthetic fun getAuthentication ()Lorg/gradle/api/artifacts/repositories/AuthenticationContainer;
	public fun getCredentials ()Lorg/gradle/api/artifacts/repositories/PasswordCredentials;
	public fun getCredentials (Ljava/lang/Class;)Lorg/gradle/api/credentials/Credentials;
	public final fun getType ()Lcom/jetbrains/plugin/structure/intellij/repository/CustomPluginRepositoryListingType;
}

public abstract class org/jetbrains/intellij/platform/gradle/artifacts/transform/CollectorTransformer : org/gradle/api/artifacts/transform/TransformAction {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/artifacts/transform/CollectorTransformer$Companion;
	public fun <init> ()V
	public abstract fun getInputArtifact ()Lorg/gradle/api/provider/Provider;
	public fun transform (Lorg/gradle/api/artifacts/transform/TransformOutputs;)V
}

public final class org/jetbrains/intellij/platform/gradle/artifacts/transform/CollectorTransformer$Companion {
}

public abstract interface class org/jetbrains/intellij/platform/gradle/artifacts/transform/CollectorTransformer$Parameters : org/gradle/api/artifacts/transform/TransformParameters {
	public abstract fun getIntellijPlatform ()Lorg/gradle/api/file/ConfigurableFileCollection;
}

public abstract class org/jetbrains/intellij/platform/gradle/artifacts/transform/ExtractorTransformer : org/gradle/api/artifacts/transform/TransformAction {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/artifacts/transform/ExtractorTransformer$Companion;
	public fun <init> (Lorg/gradle/api/file/ArchiveOperations;Lorg/gradle/process/ExecOperations;Lorg/gradle/api/model/ObjectFactory;Lorg/gradle/api/file/FileSystemOperations;)V
	public abstract fun getInputArtifact ()Lorg/gradle/api/provider/Provider;
	public fun transform (Lorg/gradle/api/artifacts/transform/TransformOutputs;)V
}

public final class org/jetbrains/intellij/platform/gradle/artifacts/transform/ExtractorTransformer$Companion {
}

public abstract class org/jetbrains/intellij/platform/gradle/artifacts/transform/LocalIvyArtifactPathComponentMetadataRule : org/gradle/api/artifacts/ComponentMetadataRule {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun execute (Ljava/lang/Object;)V
	public fun execute (Lorg/gradle/api/artifacts/ComponentMetadataContext;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/artifacts/transform/LocalPluginsNormalizationTransformers : org/gradle/api/artifacts/transform/TransformAction {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/artifacts/transform/LocalPluginsNormalizationTransformers$Companion;
	public fun <init> (Lorg/gradle/api/file/FileSystemOperations;)V
	public abstract fun getInputArtifact ()Lorg/gradle/api/provider/Provider;
	public fun transform (Lorg/gradle/api/artifacts/transform/TransformOutputs;)V
}

public final class org/jetbrains/intellij/platform/gradle/artifacts/transform/LocalPluginsNormalizationTransformers$Companion {
}

public abstract class org/jetbrains/intellij/platform/gradle/attributes/ComposedJarRule : org/gradle/api/attributes/AttributeCompatibilityRule {
	public fun <init> ()V
	public synthetic fun execute (Ljava/lang/Object;)V
	public fun execute (Lorg/gradle/api/attributes/CompatibilityCheckDetails;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/attributes/DistributionRule : org/gradle/api/attributes/AttributeCompatibilityRule {
	public fun <init> ()V
	public synthetic fun execute (Ljava/lang/Object;)V
	public fun execute (Lorg/gradle/api/attributes/CompatibilityCheckDetails;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension$Companion;
	public fun <init> (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesHelper;)V
	public final fun androidStudio (Ljava/lang/String;)V
	public final fun androidStudio (Ljava/lang/String;Z)V
	public final fun androidStudio (Lorg/gradle/api/provider/Provider;)V
	public final fun androidStudio (Lorg/gradle/api/provider/Provider;Z)V
	public static synthetic fun androidStudio$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun androidStudio$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public final fun aqua (Ljava/lang/String;)V
	public final fun aqua (Ljava/lang/String;Z)V
	public final fun aqua (Lorg/gradle/api/provider/Provider;)V
	public final fun aqua (Lorg/gradle/api/provider/Provider;Z)V
	public static synthetic fun aqua$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun aqua$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public final fun bundledLibrary (Ljava/lang/String;)V
	public final fun bundledLibrary (Lorg/gradle/api/provider/Provider;)V
	public final fun bundledModule (Ljava/lang/String;)V
	public final fun bundledModule (Lorg/gradle/api/provider/Provider;)V
	public final fun bundledModules (Ljava/util/List;)V
	public final fun bundledModules (Lorg/gradle/api/provider/Provider;)V
	public final fun bundledModules ([Ljava/lang/String;)V
	public final fun bundledPlugin (Ljava/lang/String;)V
	public final fun bundledPlugin (Lorg/gradle/api/provider/Provider;)V
	public final fun bundledPlugins (Ljava/util/List;)V
	public final fun bundledPlugins (Lorg/gradle/api/provider/Provider;)V
	public final fun bundledPlugins ([Ljava/lang/String;)V
	public final fun clion (Ljava/lang/String;)V
	public final fun clion (Ljava/lang/String;Z)V
	public final fun clion (Lorg/gradle/api/provider/Provider;)V
	public final fun clion (Lorg/gradle/api/provider/Provider;Z)V
	public static synthetic fun clion$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun clion$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public final fun create (Ljava/lang/String;)V
	public final fun create (Ljava/lang/String;Ljava/lang/String;)V
	public final fun create (Ljava/lang/String;Ljava/lang/String;Z)V
	public final fun create (Ljava/lang/String;Lorg/gradle/api/provider/Provider;)V
	public final fun create (Ljava/lang/String;Lorg/gradle/api/provider/Provider;Z)V
	public final fun create (Ljava/lang/String;Z)V
	public final fun create (Lorg/gradle/api/provider/Provider;)V
	public final fun create (Lorg/gradle/api/provider/Provider;Ljava/lang/String;)V
	public final fun create (Lorg/gradle/api/provider/Provider;Ljava/lang/String;Z)V
	public final fun create (Lorg/gradle/api/provider/Provider;Lorg/gradle/api/provider/Provider;)V
	public final fun create (Lorg/gradle/api/provider/Provider;Lorg/gradle/api/provider/Provider;Ljava/lang/String;)V
	public final fun create (Lorg/gradle/api/provider/Provider;Lorg/gradle/api/provider/Provider;Lorg/gradle/api/provider/Provider;)V
	public final fun create (Lorg/gradle/api/provider/Provider;Lorg/gradle/api/provider/Provider;Z)V
	public final fun create (Lorg/gradle/api/provider/Provider;Lorg/gradle/api/provider/Provider;ZLjava/lang/String;)V
	public final fun create (Lorg/gradle/api/provider/Provider;Z)V
	public final fun create (Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;Ljava/lang/String;)V
	public final fun create (Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;Ljava/lang/String;Z)V
	public final fun create (Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;Lorg/gradle/api/provider/Provider;)V
	public final fun create (Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;Lorg/gradle/api/provider/Provider;Z)V
	public static synthetic fun create$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun create$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public static synthetic fun create$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun create$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/gradle/api/provider/Provider;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun create$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/gradle/api/provider/Provider;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public static synthetic fun create$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/gradle/api/provider/Provider;Lorg/gradle/api/provider/Provider;ZLjava/lang/String;ILjava/lang/Object;)V
	public static synthetic fun create$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public static synthetic fun create$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun create$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public final fun datagrip (Ljava/lang/String;)V
	public final fun datagrip (Ljava/lang/String;Z)V
	public final fun datagrip (Lorg/gradle/api/provider/Provider;)V
	public final fun datagrip (Lorg/gradle/api/provider/Provider;Z)V
	public static synthetic fun datagrip$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun datagrip$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public final fun dataspell (Ljava/lang/String;)V
	public final fun dataspell (Ljava/lang/String;Z)V
	public final fun dataspell (Lorg/gradle/api/provider/Provider;)V
	public final fun dataspell (Lorg/gradle/api/provider/Provider;Z)V
	public static synthetic fun dataspell$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun dataspell$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public final fun fleetBackend (Ljava/lang/String;)V
	public final fun fleetBackend (Ljava/lang/String;Z)V
	public final fun fleetBackend (Lorg/gradle/api/provider/Provider;)V
	public final fun fleetBackend (Lorg/gradle/api/provider/Provider;Z)V
	public static synthetic fun fleetBackend$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun fleetBackend$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public final fun gateway (Ljava/lang/String;)V
	public final fun gateway (Ljava/lang/String;Z)V
	public final fun gateway (Lorg/gradle/api/provider/Provider;)V
	public final fun gateway (Lorg/gradle/api/provider/Provider;Z)V
	public static synthetic fun gateway$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun gateway$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public final fun goland (Ljava/lang/String;)V
	public final fun goland (Ljava/lang/String;Z)V
	public final fun goland (Lorg/gradle/api/provider/Provider;)V
	public final fun goland (Lorg/gradle/api/provider/Provider;Z)V
	public static synthetic fun goland$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun goland$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public final fun instrumentationTools ()V
	public final fun intellijIdeaCommunity (Ljava/lang/String;)V
	public final fun intellijIdeaCommunity (Ljava/lang/String;Z)V
	public final fun intellijIdeaCommunity (Lorg/gradle/api/provider/Provider;)V
	public final fun intellijIdeaCommunity (Lorg/gradle/api/provider/Provider;Z)V
	public static synthetic fun intellijIdeaCommunity$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun intellijIdeaCommunity$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public final fun intellijIdeaUltimate (Ljava/lang/String;)V
	public final fun intellijIdeaUltimate (Ljava/lang/String;Z)V
	public final fun intellijIdeaUltimate (Lorg/gradle/api/provider/Provider;)V
	public final fun intellijIdeaUltimate (Lorg/gradle/api/provider/Provider;Z)V
	public static synthetic fun intellijIdeaUltimate$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun intellijIdeaUltimate$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public final fun javaCompiler ()V
	public final fun javaCompiler (Ljava/lang/String;)V
	public final fun javaCompiler (Lorg/gradle/api/provider/Provider;)V
	public static synthetic fun javaCompiler$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;ILjava/lang/Object;)V
	public final fun jetbrainsRuntime ()V
	public final fun jetbrainsRuntime (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun jetbrainsRuntime (Lorg/gradle/api/provider/Provider;Lorg/gradle/api/provider/Provider;Lorg/gradle/api/provider/Provider;)V
	public static synthetic fun jetbrainsRuntime$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
	public final fun jetbrainsRuntimeExplicit (Ljava/lang/String;)V
	public final fun jetbrainsRuntimeExplicit (Lorg/gradle/api/provider/Provider;)V
	public final fun jetbrainsRuntimeLocal (Ljava/lang/String;)V
	public final fun jetbrainsRuntimeLocal (Ljava/nio/file/Path;)V
	public final fun jetbrainsRuntimeLocal (Lorg/gradle/api/file/Directory;)V
	public final fun jetbrainsRuntimeLocal (Lorg/gradle/api/provider/Provider;)V
	public final fun local (Ljava/io/File;)V
	public final fun local (Ljava/lang/String;)V
	public final fun local (Lorg/gradle/api/file/Directory;)V
	public final fun local (Lorg/gradle/api/provider/Provider;)V
	public final fun local (Lorg/gradle/api/provider/Provider;Ljava/lang/String;)V
	public final fun localPlugin (Ljava/io/File;)V
	public final fun localPlugin (Ljava/lang/String;)V
	public final fun localPlugin (Lorg/gradle/api/artifacts/ProjectDependency;)Z
	public final fun localPlugin (Lorg/gradle/api/file/Directory;)V
	public final fun localPlugin (Lorg/gradle/api/provider/Provider;)V
	public final fun mps (Ljava/lang/String;)V
	public final fun mps (Ljava/lang/String;Z)V
	public final fun mps (Lorg/gradle/api/provider/Provider;)V
	public final fun mps (Lorg/gradle/api/provider/Provider;Z)V
	public static synthetic fun mps$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun mps$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public final fun phpstorm (Ljava/lang/String;)V
	public final fun phpstorm (Ljava/lang/String;Z)V
	public final fun phpstorm (Lorg/gradle/api/provider/Provider;)V
	public final fun phpstorm (Lorg/gradle/api/provider/Provider;Z)V
	public static synthetic fun phpstorm$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun phpstorm$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public final fun platformDependency (Lorg/jetbrains/intellij/platform/gradle/models/Coordinates;)V
	public final fun platformDependency (Lorg/jetbrains/intellij/platform/gradle/models/Coordinates;Ljava/lang/String;)V
	public final fun platformDependency (Lorg/jetbrains/intellij/platform/gradle/models/Coordinates;Ljava/lang/String;Ljava/lang/String;)V
	public final fun platformDependency (Lorg/jetbrains/intellij/platform/gradle/models/Coordinates;Lorg/gradle/api/provider/Provider;Ljava/lang/String;)V
	public static synthetic fun platformDependency$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/jetbrains/intellij/platform/gradle/models/Coordinates;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
	public static synthetic fun platformDependency$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/jetbrains/intellij/platform/gradle/models/Coordinates;Lorg/gradle/api/provider/Provider;Ljava/lang/String;ILjava/lang/Object;)V
	public final fun plugin (Ljava/lang/String;)V
	public final fun plugin (Ljava/lang/String;Ljava/lang/String;)V
	public final fun plugin (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun plugin (Lorg/gradle/api/provider/Provider;)V
	public final fun plugin (Lorg/gradle/api/provider/Provider;Lorg/gradle/api/provider/Provider;Lorg/gradle/api/provider/Provider;)V
	public static synthetic fun plugin$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
	public final fun pluginModule (Lorg/gradle/api/artifacts/Dependency;)Ljava/lang/Boolean;
	public final fun pluginVerifier ()V
	public final fun pluginVerifier (Ljava/lang/String;)V
	public final fun pluginVerifier (Lorg/gradle/api/provider/Provider;)V
	public static synthetic fun pluginVerifier$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;ILjava/lang/Object;)V
	public final fun plugins (Ljava/util/List;)V
	public final fun plugins (Lorg/gradle/api/provider/Provider;)V
	public final fun plugins ([Ljava/lang/String;)V
	public final fun pycharmCommunity (Ljava/lang/String;)V
	public final fun pycharmCommunity (Ljava/lang/String;Z)V
	public final fun pycharmCommunity (Lorg/gradle/api/provider/Provider;)V
	public final fun pycharmCommunity (Lorg/gradle/api/provider/Provider;Z)V
	public static synthetic fun pycharmCommunity$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun pycharmCommunity$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public final fun pycharmProfessional (Ljava/lang/String;)V
	public final fun pycharmProfessional (Ljava/lang/String;Z)V
	public final fun pycharmProfessional (Lorg/gradle/api/provider/Provider;)V
	public final fun pycharmProfessional (Lorg/gradle/api/provider/Provider;Z)V
	public static synthetic fun pycharmProfessional$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun pycharmProfessional$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public final fun rider (Ljava/lang/String;)V
	public final fun rider (Ljava/lang/String;Z)V
	public final fun rider (Lorg/gradle/api/provider/Provider;)V
	public final fun rider (Lorg/gradle/api/provider/Provider;Z)V
	public static synthetic fun rider$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun rider$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public final fun rubymine (Ljava/lang/String;)V
	public final fun rubymine (Ljava/lang/String;Z)V
	public final fun rubymine (Lorg/gradle/api/provider/Provider;)V
	public final fun rubymine (Lorg/gradle/api/provider/Provider;Z)V
	public static synthetic fun rubymine$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun rubymine$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public final fun rustRover (Ljava/lang/String;)V
	public final fun rustRover (Ljava/lang/String;Z)V
	public final fun rustRover (Lorg/gradle/api/provider/Provider;)V
	public final fun rustRover (Lorg/gradle/api/provider/Provider;Z)V
	public static synthetic fun rustRover$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun rustRover$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public final fun testFramework (Lorg/jetbrains/intellij/platform/gradle/TestFrameworkType;)V
	public final fun testFramework (Lorg/jetbrains/intellij/platform/gradle/TestFrameworkType;Ljava/lang/String;)V
	public final fun testFramework (Lorg/jetbrains/intellij/platform/gradle/TestFrameworkType;Ljava/lang/String;Ljava/lang/String;)V
	public final fun testFramework (Lorg/jetbrains/intellij/platform/gradle/TestFrameworkType;Lorg/gradle/api/provider/Provider;Ljava/lang/String;)V
	public static synthetic fun testFramework$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/jetbrains/intellij/platform/gradle/TestFrameworkType;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
	public static synthetic fun testFramework$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/jetbrains/intellij/platform/gradle/TestFrameworkType;Lorg/gradle/api/provider/Provider;Ljava/lang/String;ILjava/lang/Object;)V
	public final fun testPlatformDependency (Lorg/jetbrains/intellij/platform/gradle/models/Coordinates;)V
	public final fun testPlatformDependency (Lorg/jetbrains/intellij/platform/gradle/models/Coordinates;Ljava/lang/String;)V
	public final fun testPlatformDependency (Lorg/jetbrains/intellij/platform/gradle/models/Coordinates;Ljava/lang/String;Ljava/lang/String;)V
	public final fun testPlatformDependency (Lorg/jetbrains/intellij/platform/gradle/models/Coordinates;Lorg/gradle/api/provider/Provider;Ljava/lang/String;)V
	public static synthetic fun testPlatformDependency$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/jetbrains/intellij/platform/gradle/models/Coordinates;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
	public static synthetic fun testPlatformDependency$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/jetbrains/intellij/platform/gradle/models/Coordinates;Lorg/gradle/api/provider/Provider;Ljava/lang/String;ILjava/lang/Object;)V
	public final fun webstorm (Ljava/lang/String;)V
	public final fun webstorm (Ljava/lang/String;Z)V
	public final fun webstorm (Lorg/gradle/api/provider/Provider;)V
	public final fun webstorm (Lorg/gradle/api/provider/Provider;Z)V
	public static synthetic fun webstorm$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun webstorm$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public final fun writerside (Ljava/lang/String;)V
	public final fun writerside (Ljava/lang/String;Z)V
	public final fun writerside (Lorg/gradle/api/provider/Provider;)V
	public final fun writerside (Lorg/gradle/api/provider/Provider;Z)V
	public static synthetic fun writerside$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun writerside$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public final fun zipSigner ()V
	public final fun zipSigner (Ljava/lang/String;)V
	public final fun zipSigner (Lorg/gradle/api/provider/Provider;)V
	public static synthetic fun zipSigner$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;Ljava/lang/String;ILjava/lang/Object;)V
}

public final class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension$Companion {
	public final fun register (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesHelper;Ljava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesExtension;
}

public final class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesHelper {
	public fun <init> (Lorg/gradle/api/artifacts/ConfigurationContainer;Lorg/gradle/api/artifacts/dsl/DependencyHandler;Lorg/gradle/api/file/ProjectLayout;Lorg/gradle/api/model/ObjectFactory;Lorg/gradle/api/provider/ProviderFactory;Ljava/nio/file/Path;Lorg/gradle/api/provider/Provider;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension : org/gradle/api/plugins/ExtensionAware {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$Companion;
	public fun <init> (Lorg/gradle/api/artifacts/ConfigurationContainer;Lorg/gradle/api/provider/ProviderFactory;Ljava/nio/file/Path;)V
	public abstract fun getAutoReload ()Lorg/gradle/api/provider/Property;
	public abstract fun getBuildSearchableOptions ()Lorg/gradle/api/provider/Property;
	public final fun getCachePath ()Ljava/nio/file/Path;
	public abstract fun getInstrumentCode ()Lorg/gradle/api/provider/Property;
	public final fun getPlatformPath ()Ljava/nio/file/Path;
	public final fun getPluginConfiguration ()Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginConfiguration;
	public final fun getPluginVerification ()Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginVerification;
	public final fun getProductInfo ()Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo;
	public abstract fun getProjectName ()Lorg/gradle/api/provider/Property;
	public final fun getPublishing ()Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$Publishing;
	public abstract fun getSandboxContainer ()Lorg/gradle/api/file/DirectoryProperty;
	public final fun getSigning ()Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$Signing;
	public abstract fun getSplitMode ()Lorg/gradle/api/provider/Property;
	public abstract fun getSplitModeTarget ()Lorg/gradle/api/provider/Property;
	public final fun getVerifyPlugin ()Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginVerification;
	public final fun pluginConfiguration (Lgroovy/lang/Closure;)V
	public final fun pluginConfiguration (Lorg/gradle/api/Action;)V
	public final fun pluginVerification (Lgroovy/lang/Closure;)V
	public final fun pluginVerification (Lorg/gradle/api/Action;)V
	public final fun publishing (Lgroovy/lang/Closure;)V
	public final fun publishing (Lorg/gradle/api/Action;)V
	public final fun signing (Lgroovy/lang/Closure;)V
	public final fun signing (Lorg/gradle/api/Action;)V
	public final fun verifyPlugin (Lgroovy/lang/Closure;)V
	public final fun verifyPlugin (Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$Companion : org/jetbrains/intellij/platform/gradle/extensions/Registrable {
	public synthetic fun register (Lorg/gradle/api/Project;Ljava/lang/Object;)Ljava/lang/Object;
	public fun register (Lorg/gradle/api/Project;Ljava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginConfiguration : org/gradle/api/plugins/ExtensionAware {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginConfiguration$Companion;
	public abstract fun getChangeNotes ()Lorg/gradle/api/provider/Property;
	public abstract fun getDescription ()Lorg/gradle/api/provider/Property;
	public abstract fun getId ()Lorg/gradle/api/provider/Property;
	public fun getIdeaVersion ()Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginConfiguration$IdeaVersion;
	public abstract fun getName ()Lorg/gradle/api/provider/Property;
	public fun getProductDescriptor ()Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginConfiguration$ProductDescriptor;
	public fun getVendor ()Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginConfiguration$Vendor;
	public abstract fun getVersion ()Lorg/gradle/api/provider/Property;
	public fun ideaVersion (Lgroovy/lang/Closure;)V
	public fun ideaVersion (Lorg/gradle/api/Action;)V
	public fun productDescriptor (Lgroovy/lang/Closure;)V
	public fun productDescriptor (Lorg/gradle/api/Action;)V
	public fun vendor (Lgroovy/lang/Closure;)V
	public fun vendor (Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginConfiguration$Companion : org/jetbrains/intellij/platform/gradle/extensions/Registrable {
	public synthetic fun register (Lorg/gradle/api/Project;Ljava/lang/Object;)Ljava/lang/Object;
	public fun register (Lorg/gradle/api/Project;Ljava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginConfiguration;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginConfiguration$IdeaVersion {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginConfiguration$IdeaVersion$Companion;
	public abstract fun getSinceBuild ()Lorg/gradle/api/provider/Property;
	public abstract fun getUntilBuild ()Lorg/gradle/api/provider/Property;
}

public final class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginConfiguration$IdeaVersion$Companion : org/jetbrains/intellij/platform/gradle/extensions/Registrable {
	public synthetic fun register (Lorg/gradle/api/Project;Ljava/lang/Object;)Ljava/lang/Object;
	public fun register (Lorg/gradle/api/Project;Ljava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginConfiguration$IdeaVersion;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginConfiguration$ProductDescriptor {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginConfiguration$ProductDescriptor$Companion;
	public abstract fun getCode ()Lorg/gradle/api/provider/Property;
	public abstract fun getEap ()Lorg/gradle/api/provider/Property;
	public abstract fun getOptional ()Lorg/gradle/api/provider/Property;
	public abstract fun getReleaseDate ()Lorg/gradle/api/provider/Property;
	public abstract fun getReleaseVersion ()Lorg/gradle/api/provider/Property;
}

public final class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginConfiguration$ProductDescriptor$Companion : org/jetbrains/intellij/platform/gradle/extensions/Registrable {
	public synthetic fun register (Lorg/gradle/api/Project;Ljava/lang/Object;)Ljava/lang/Object;
	public fun register (Lorg/gradle/api/Project;Ljava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginConfiguration$ProductDescriptor;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginConfiguration$Vendor {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginConfiguration$Vendor$Companion;
	public abstract fun getEmail ()Lorg/gradle/api/provider/Property;
	public abstract fun getName ()Lorg/gradle/api/provider/Property;
	public abstract fun getUrl ()Lorg/gradle/api/provider/Property;
}

public final class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginConfiguration$Vendor$Companion : org/jetbrains/intellij/platform/gradle/extensions/Registrable {
	public synthetic fun register (Lorg/gradle/api/Project;Ljava/lang/Object;)Ljava/lang/Object;
	public fun register (Lorg/gradle/api/Project;Ljava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginConfiguration$Vendor;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginVerification : org/gradle/api/plugins/ExtensionAware {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginVerification$Companion;
	public abstract fun getCliPath ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getExternalPrefixes ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getFailureLevel ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getFreeArgs ()Lorg/gradle/api/provider/ListProperty;
	public fun getIdes ()Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginVerification$Ides;
	public abstract fun getIgnoredProblemsFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getSubsystemsToCheck ()Lorg/gradle/api/provider/Property;
	public abstract fun getTeamCityOutputFormat ()Lorg/gradle/api/provider/Property;
	public abstract fun getVerificationReportsDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getVerificationReportsFormats ()Lorg/gradle/api/provider/ListProperty;
	public fun ides (Lgroovy/lang/Closure;)V
	public fun ides (Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginVerification$Companion : org/jetbrains/intellij/platform/gradle/extensions/Registrable {
	public synthetic fun register (Lorg/gradle/api/Project;Ljava/lang/Object;)Ljava/lang/Object;
	public fun register (Lorg/gradle/api/Project;Ljava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginVerification;
}

public abstract class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginVerification$Ides {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginVerification$Ides$Companion;
	public fun <init> (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesHelper;Lorg/gradle/api/provider/Provider;)V
	public final fun ProductReleasesValueSource (Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/provider/Provider;
	public static synthetic fun ProductReleasesValueSource$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginVerification$Ides;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/provider/Provider;
	public final fun ide (Ljava/lang/String;)V
	public final fun ide (Ljava/lang/String;Ljava/lang/String;)V
	public final fun ide (Ljava/lang/String;Ljava/lang/String;Z)V
	public final fun ide (Lorg/gradle/api/provider/Provider;)V
	public final fun ide (Lorg/gradle/api/provider/Provider;Lorg/gradle/api/provider/Provider;)V
	public final fun ide (Lorg/gradle/api/provider/Provider;Lorg/gradle/api/provider/Provider;Z)V
	public final fun ide (Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;Ljava/lang/String;)V
	public final fun ide (Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;Ljava/lang/String;Z)V
	public static synthetic fun ide$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginVerification$Ides;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)V
	public static synthetic fun ide$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginVerification$Ides;Lorg/gradle/api/provider/Provider;Lorg/gradle/api/provider/Provider;ZILjava/lang/Object;)V
	public static synthetic fun ide$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginVerification$Ides;Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;Ljava/lang/String;ZILjava/lang/Object;)V
	public final fun ides (Ljava/util/List;)V
	public final fun ides (Lorg/gradle/api/provider/Provider;)V
	public final fun local (Ljava/io/File;)V
	public final fun local (Ljava/lang/String;)V
	public final fun local (Lorg/gradle/api/file/Directory;)V
	public final fun local (Lorg/gradle/api/provider/Provider;)V
	public final fun recommended ()V
	public final fun select (Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun select$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginVerification$Ides;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
}

public final class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginVerification$Ides$Companion {
	public final fun register (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesHelper;Lorg/gradle/api/provider/Provider;Ljava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginVerification$Ides;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$Publishing {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$Publishing$Companion;
	public abstract fun getChannels ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getHidden ()Lorg/gradle/api/provider/Property;
	public abstract fun getHost ()Lorg/gradle/api/provider/Property;
	public abstract fun getIdeServices ()Lorg/gradle/api/provider/Property;
	public abstract fun getToken ()Lorg/gradle/api/provider/Property;
}

public final class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$Publishing$Companion : org/jetbrains/intellij/platform/gradle/extensions/Registrable {
	public synthetic fun register (Lorg/gradle/api/Project;Ljava/lang/Object;)Ljava/lang/Object;
	public fun register (Lorg/gradle/api/Project;Ljava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$Publishing;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$Signing {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$Signing$Companion;
	public abstract fun getCertificateChain ()Lorg/gradle/api/provider/Property;
	public abstract fun getCertificateChainFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getCliPath ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getKeyStore ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getKeyStoreKeyAlias ()Lorg/gradle/api/provider/Property;
	public abstract fun getKeyStorePassword ()Lorg/gradle/api/provider/Property;
	public abstract fun getKeyStoreProviderName ()Lorg/gradle/api/provider/Property;
	public abstract fun getKeyStoreType ()Lorg/gradle/api/provider/Property;
	public abstract fun getPassword ()Lorg/gradle/api/provider/Property;
	public abstract fun getPrivateKey ()Lorg/gradle/api/provider/Property;
	public abstract fun getPrivateKeyFile ()Lorg/gradle/api/file/RegularFileProperty;
}

public final class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$Signing$Companion : org/jetbrains/intellij/platform/gradle/extensions/Registrable {
	public synthetic fun register (Lorg/gradle/api/Project;Ljava/lang/Object;)Ljava/lang/Object;
	public fun register (Lorg/gradle/api/Project;Ljava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$Signing;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$VerifyPlugin : org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension$PluginConfiguration {
}

public abstract class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformPluginsExtension : org/gradle/api/plugins/ExtensionAware {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformPluginsExtension$Companion;
	public fun <init> (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesHelper;Lorg/gradle/api/model/ObjectFactory;)V
	public final fun disablePlugin (Ljava/lang/String;)V
	public final fun disablePlugin (Lorg/gradle/api/provider/Provider;)V
	public final fun disablePlugins (Ljava/util/List;)V
	public final fun disablePlugins (Lorg/gradle/api/provider/Provider;)V
	public final fun disablePlugins ([Ljava/lang/String;)V
	public final fun localPlugin (Ljava/io/File;)V
	public final fun localPlugin (Ljava/lang/String;)V
	public final fun localPlugin (Lorg/gradle/api/artifacts/ProjectDependency;)Z
	public final fun localPlugin (Lorg/gradle/api/file/Directory;)V
	public final fun localPlugin (Lorg/gradle/api/provider/Provider;)V
	public final fun plugin (Ljava/lang/String;)V
	public final fun plugin (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun plugin (Lorg/gradle/api/provider/Provider;)V
	public final fun plugin (Lorg/gradle/api/provider/Provider;Lorg/gradle/api/provider/Provider;Lorg/gradle/api/provider/Provider;)V
	public static synthetic fun plugin$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformPluginsExtension;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
	public final fun plugins (Ljava/util/List;)V
	public final fun plugins (Lorg/gradle/api/provider/Provider;)V
	public final fun plugins ([Ljava/lang/String;)V
	public final fun robotServerPlugin (Ljava/lang/String;)V
	public final fun robotServerPlugin (Lorg/gradle/api/provider/Provider;)V
	public static synthetic fun robotServerPlugin$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformPluginsExtension;Ljava/lang/String;ILjava/lang/Object;)V
}

public final class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformPluginsExtension$Companion {
	public final fun register (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesHelper;Lorg/gradle/api/model/ObjectFactory;Ljava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformPluginsExtension;
}

public abstract class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformRepositoriesExtension {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformRepositoriesExtension$Companion;
	public fun <init> (Lorg/gradle/api/artifacts/dsl/RepositoryHandler;Lorg/gradle/api/provider/ProviderFactory;Lorg/gradle/api/model/ObjectFactory;Lorg/gradle/api/flow/FlowScope;Lorg/gradle/api/flow/FlowProviders;Lorg/gradle/api/invocation/Gradle;Ljava/nio/file/Path;)V
	public final fun androidStudioInstallers ()Lorg/gradle/api/artifacts/repositories/IvyArtifactRepository;
	public final fun androidStudioInstallers (Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/artifacts/repositories/IvyArtifactRepository;
	public static synthetic fun androidStudioInstallers$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformRepositoriesExtension;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/artifacts/repositories/IvyArtifactRepository;
	public final fun customPluginRepository (Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/artifacts/repositories/PluginArtifactRepository;
	public final fun customPluginRepository (Ljava/lang/String;Lcom/jetbrains/plugin/structure/intellij/repository/CustomPluginRepositoryListingType;)Lorg/jetbrains/intellij/platform/gradle/artifacts/repositories/PluginArtifactRepository;
	public final fun customPluginRepository (Ljava/lang/String;Lcom/jetbrains/plugin/structure/intellij/repository/CustomPluginRepositoryListingType;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/intellij/platform/gradle/artifacts/repositories/PluginArtifactRepository;
	public static synthetic fun customPluginRepository$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformRepositoriesExtension;Ljava/lang/String;Lcom/jetbrains/plugin/structure/intellij/repository/CustomPluginRepositoryListingType;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/artifacts/repositories/PluginArtifactRepository;
	public final fun defaultRepositories ()V
	public final fun intellijDependencies ()Lorg/gradle/api/artifacts/repositories/MavenArtifactRepository;
	public final fun intellijDependencies (Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/artifacts/repositories/MavenArtifactRepository;
	public static synthetic fun intellijDependencies$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformRepositoriesExtension;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/artifacts/repositories/MavenArtifactRepository;
	public final fun jetbrainsIdeInstallers ()Lorg/gradle/api/artifacts/repositories/IvyArtifactRepository;
	public final fun jetbrainsIdeInstallers (Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/artifacts/repositories/IvyArtifactRepository;
	public static synthetic fun jetbrainsIdeInstallers$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformRepositoriesExtension;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/artifacts/repositories/IvyArtifactRepository;
	public final fun jetbrainsRuntime ()Lorg/gradle/api/artifacts/repositories/IvyArtifactRepository;
	public final fun jetbrainsRuntime (Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/artifacts/repositories/IvyArtifactRepository;
	public static synthetic fun jetbrainsRuntime$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformRepositoriesExtension;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/artifacts/repositories/IvyArtifactRepository;
	public final fun localPlatformArtifacts ()Lorg/gradle/api/artifacts/repositories/IvyArtifactRepository;
	public final fun localPlatformArtifacts (Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/artifacts/repositories/IvyArtifactRepository;
	public static synthetic fun localPlatformArtifacts$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformRepositoriesExtension;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/artifacts/repositories/IvyArtifactRepository;
	public final fun marketplace ()Lorg/gradle/api/artifacts/repositories/MavenArtifactRepository;
	public final fun marketplace (Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/artifacts/repositories/MavenArtifactRepository;
	public static synthetic fun marketplace$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformRepositoriesExtension;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/artifacts/repositories/MavenArtifactRepository;
	public final fun nightly ()Lorg/gradle/api/artifacts/repositories/MavenArtifactRepository;
	public final fun nightly (Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/artifacts/repositories/MavenArtifactRepository;
	public static synthetic fun nightly$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformRepositoriesExtension;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/artifacts/repositories/MavenArtifactRepository;
	public final fun releases ()Lorg/gradle/api/artifacts/repositories/MavenArtifactRepository;
	public final fun releases (Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/artifacts/repositories/MavenArtifactRepository;
	public static synthetic fun releases$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformRepositoriesExtension;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/artifacts/repositories/MavenArtifactRepository;
	public final fun snapshots ()Lorg/gradle/api/artifacts/repositories/MavenArtifactRepository;
	public final fun snapshots (Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/artifacts/repositories/MavenArtifactRepository;
	public static synthetic fun snapshots$default (Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformRepositoriesExtension;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/artifacts/repositories/MavenArtifactRepository;
}

public final class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformRepositoriesExtension$Companion : org/jetbrains/intellij/platform/gradle/extensions/Registrable {
	public synthetic fun register (Lorg/gradle/api/Project;Ljava/lang/Object;)Ljava/lang/Object;
	public fun register (Lorg/gradle/api/Project;Ljava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformRepositoriesExtension;
	public final fun register (Lorg/gradle/api/initialization/Settings;Ljava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformRepositoriesExtension;
}

public final class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformRepositoriesExtensionKt {
	public static final fun intellijPlatform (Lorg/gradle/api/artifacts/dsl/RepositoryHandler;Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformRepositoriesHelper {
	public fun <init> (Lorg/gradle/api/artifacts/dsl/RepositoryHandler;Lorg/gradle/api/provider/ProviderFactory;Lorg/gradle/api/model/ObjectFactory;Lorg/gradle/api/flow/FlowScope;Lorg/gradle/api/flow/FlowProviders;Lorg/gradle/api/invocation/Gradle;Ljava/nio/file/Path;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformTestingExtension : org/gradle/api/plugins/ExtensionAware {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformTestingExtension$Companion;
	public fun <init> (Lorg/gradle/api/Project;Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesHelper;)V
	public final fun getRunIde ()Lorg/gradle/api/NamedDomainObjectContainer;
	public final fun getTestIde ()Lorg/gradle/api/NamedDomainObjectContainer;
	public final fun getTestIdePerformance ()Lorg/gradle/api/NamedDomainObjectContainer;
	public final fun getTestIdeUi ()Lorg/gradle/api/NamedDomainObjectContainer;
}

public abstract class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformTestingExtension$CommonParameters : org/gradle/api/Buildable, org/gradle/api/Named, org/gradle/api/plugins/ExtensionAware {
	public fun <init> (Ljava/lang/String;Lorg/gradle/api/Project;Ljava/lang/Class;)V
	public fun getBuildDependencies ()Lorg/gradle/api/internal/tasks/DefaultTaskDependency;
	public synthetic fun getBuildDependencies ()Lorg/gradle/api/tasks/TaskDependency;
	public abstract fun getLocalPath ()Lorg/gradle/api/file/DirectoryProperty;
	public fun getName ()Ljava/lang/String;
	public final fun getPrepareSandboxTask ()Lorg/gradle/api/tasks/TaskProvider;
	public abstract fun getSandboxDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getSplitMode ()Lorg/gradle/api/provider/Property;
	public abstract fun getSplitModeTarget ()Lorg/gradle/api/provider/Property;
	public final fun getTask ()Lorg/gradle/api/tasks/TaskProvider;
	public abstract fun getType ()Lorg/gradle/api/provider/Property;
	public abstract fun getUseInstaller ()Lorg/gradle/api/provider/Property;
	public abstract fun getVersion ()Lorg/gradle/api/provider/Property;
	public final fun plugins (Lorg/gradle/api/Action;)V
	public final fun prepareSandboxTask (Lorg/gradle/api/Action;)V
	public final fun task (Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformTestingExtension$Companion {
	public final fun register (Lorg/gradle/api/Project;Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformDependenciesHelper;Ljava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformTestingExtension;
}

public abstract class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformTestingExtension$RunIdeParameters : org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformTestingExtension$CommonParameters {
	public fun <init> (Ljava/lang/String;Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformTestingExtension$TestIdeParameters : org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformTestingExtension$CommonParameters {
	public fun <init> (Ljava/lang/String;Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformTestingExtension$TestIdePerformanceParameters : org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformTestingExtension$CommonParameters {
	public fun <init> (Ljava/lang/String;Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformTestingExtension$TestIdeUiParameters : org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformTestingExtension$CommonParameters {
	public fun <init> (Ljava/lang/String;Lorg/gradle/api/Project;)V
}

public final class org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformTestingExtension$register$2$1$inlined$sam$i$org_gradle_api_Action$0 : org/gradle/api/Action {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public final synthetic fun execute (Ljava/lang/Object;)V
}

public final class org/jetbrains/intellij/platform/gradle/flow/StopShimServerAction : org/gradle/api/flow/FlowAction {
	public fun <init> ()V
	public synthetic fun execute (Lorg/gradle/api/flow/FlowParameters;)V
	public fun execute (Lorg/jetbrains/intellij/platform/gradle/flow/StopShimServerAction$Parameters;)V
}

public abstract interface class org/jetbrains/intellij/platform/gradle/flow/StopShimServerAction$Parameters : org/gradle/api/flow/FlowParameters {
	public abstract fun getBuildResult ()Lorg/gradle/api/provider/Property;
	public abstract fun getService ()Lorg/gradle/api/provider/Property;
	public abstract fun getUrl ()Lorg/gradle/api/provider/Property;
}

public final class org/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$Companion;
	public fun <init> (ILjava/util/List;)V
	public final fun component1 ()I
	public final fun component2 ()Ljava/util/List;
	public final fun copy (ILjava/util/List;)Lorg/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases;ILjava/util/List;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getItems ()Ljava/util/List;
	public final fun getVersion ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$Item {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$Item$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ljava/lang/String;
	public final fun component8 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lorg/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$Item;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$Item;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$Item;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBuild ()Ljava/lang/String;
	public final fun getChannel ()Ljava/lang/String;
	public final fun getDate ()Ljava/lang/String;
	public final fun getDownloads ()Ljava/util/List;
	public final fun getName ()Ljava/lang/String;
	public final fun getPlatformBuild ()Ljava/lang/String;
	public final fun getPlatformVersion ()Ljava/lang/String;
	public final fun getVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$Item$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$Item$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$Item;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$Item;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$Item$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$Item$Download {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$Item$Download$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$Item$Download;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$Item$Download;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$Item$Download;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChecksum ()Ljava/lang/String;
	public final fun getLink ()Ljava/lang/String;
	public final fun getSize ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$Item$Download$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$Item$Download$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$Item$Download;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$Item$Download;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/AndroidStudioReleases$Item$Download$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/Coordinates {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/models/Coordinates;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/Coordinates;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/Coordinates;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getArtifactId ()Ljava/lang/String;
	public final fun getGroupId ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/CoordinatesKt {
	public static final fun resolveLatestVersion (Lorg/jetbrains/intellij/platform/gradle/models/Coordinates;Ljava/lang/String;)Ljava/lang/String;
	public static synthetic fun resolveLatestVersion$default (Lorg/jetbrains/intellij/platform/gradle/models/Coordinates;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/IvyModule {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Info;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Info;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Info;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Info;Ljava/util/List;Ljava/util/List;Ljava/util/List;)Lorg/jetbrains/intellij/platform/gradle/models/IvyModule;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/IvyModule;Ljava/lang/String;Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Info;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/IvyModule;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getConfigurations ()Ljava/util/List;
	public final fun getDependencies ()Ljava/util/List;
	public final fun getInfo ()Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Info;
	public final fun getPublications ()Ljava/util/List;
	public final fun getVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/IvyModule$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/IvyModule;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/IvyModule;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/IvyModule$Artifact {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Artifact$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Artifact;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Artifact;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Artifact;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getConf ()Ljava/lang/String;
	public final fun getExt ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getPackaging ()Ljava/lang/String;
	public final fun getType ()Ljava/lang/String;
	public final fun getUrl ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/IvyModule$Artifact$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Artifact$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Artifact;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Artifact;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/IvyModule$Artifact$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/IvyModule$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/IvyModule$Configuration {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Configuration$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Configuration;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Configuration;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Configuration;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public final fun getVisibility ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/IvyModule$Configuration$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Configuration$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Configuration;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Configuration;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/IvyModule$Configuration$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/IvyModule$Dependency {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Dependency$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Dependency;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Dependency;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Dependency;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getArtifacts ()Ljava/util/List;
	public final fun getName ()Ljava/lang/String;
	public final fun getOrganization ()Ljava/lang/String;
	public final fun getVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/IvyModule$Dependency$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Dependency$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Dependency;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Dependency;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/IvyModule$Dependency$Artifact {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Dependency$Artifact$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Dependency$Artifact;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Dependency$Artifact;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Dependency$Artifact;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getClassifier ()Ljava/lang/String;
	public final fun getExtension ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getType ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/IvyModule$Dependency$Artifact$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Dependency$Artifact$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Dependency$Artifact;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Dependency$Artifact;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/IvyModule$Dependency$Artifact$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/IvyModule$Dependency$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/IvyModule$Info {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Info$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Info;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Info;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Info;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getModule ()Ljava/lang/String;
	public final fun getOrganisation ()Ljava/lang/String;
	public final fun getPublication ()Ljava/lang/String;
	public final fun getRevision ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/IvyModule$Info$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Info$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Info;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/IvyModule$Info;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/IvyModule$Info$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Companion;
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getProducts ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Companion;
	public fun <init> (Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product;Ljava/lang/String;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannels ()Ljava/util/List;
	public final fun getCodes ()Ljava/util/List;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()I
	public final fun component7 ()Ljava/lang/String;
	public final fun component8 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/List;)Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBuilds ()Ljava/util/List;
	public final fun getFeedback ()Ljava/lang/String;
	public final fun getId ()Ljava/lang/String;
	public final fun getLicensing ()Ljava/lang/String;
	public final fun getMajorVersion ()I
	public final fun getName ()Ljava/lang/String;
	public final fun getStatus ()Ljava/lang/String;
	public final fun getUrl ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$BlogPost;Ljava/util/List;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$BlogPost;Ljava/util/List;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$BlogPost;
	public final fun component7 ()Ljava/util/List;
	public final fun component8 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$BlogPost;Ljava/util/List;Ljava/util/List;)Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$BlogPost;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBlogPost ()Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$BlogPost;
	public final fun getButtons ()Ljava/util/List;
	public final fun getFullNumber ()Ljava/lang/String;
	public final fun getMessage ()Ljava/lang/String;
	public final fun getNumber ()Ljava/lang/String;
	public final fun getPatches ()Ljava/util/List;
	public final fun getReleaseDate ()Ljava/lang/String;
	public final fun getVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$BlogPost {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$BlogPost$Companion;
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$BlogPost;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$BlogPost;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$BlogPost;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getUrl ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$BlogPost$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$BlogPost$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$BlogPost;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$BlogPost;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$BlogPost$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$Button {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$Button$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Z)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Z
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Z)Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$Button;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$Button;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$Button;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDownload ()Z
	public final fun getName ()Ljava/lang/String;
	public final fun getUrl ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$Button$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$Button$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$Button;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$Button;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$Button$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$Patch {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$Patch$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$Patch;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$Patch;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$Patch;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFrom ()Ljava/lang/String;
	public final fun getFullFrom ()Ljava/lang/String;
	public final fun getSize ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$Patch$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$Patch$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$Patch;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$Patch;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Build$Patch$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Channel$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/JetBrainsIdesReleases$Product$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/MavenMetadata {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/MavenMetadata$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/intellij/platform/gradle/models/MavenMetadata$MavenMetadataVersioning;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Lorg/jetbrains/intellij/platform/gradle/models/MavenMetadata$MavenMetadataVersioning;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/intellij/platform/gradle/models/MavenMetadata$MavenMetadataVersioning;)Lorg/jetbrains/intellij/platform/gradle/models/MavenMetadata;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/MavenMetadata;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/intellij/platform/gradle/models/MavenMetadata$MavenMetadataVersioning;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/MavenMetadata;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getArtifactId ()Ljava/lang/String;
	public final fun getGroupId ()Ljava/lang/String;
	public final fun getModelVersion ()Ljava/lang/String;
	public final fun getVersion ()Ljava/lang/String;
	public final fun getVersioning ()Lorg/jetbrains/intellij/platform/gradle/models/MavenMetadata$MavenMetadataVersioning;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/MavenMetadata$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/MavenMetadata$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/MavenMetadata;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/MavenMetadata;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/MavenMetadata$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/MavenMetadata$MavenMetadataVersioning {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/MavenMetadata$MavenMetadataVersioning$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lorg/jetbrains/intellij/platform/gradle/models/MavenMetadata$MavenMetadataVersioning;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/MavenMetadata$MavenMetadataVersioning;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/MavenMetadata$MavenMetadataVersioning;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLastUpdated ()Ljava/lang/String;
	public final fun getLatest ()Ljava/lang/String;
	public final fun getRelease ()Ljava/lang/String;
	public final fun getVersions ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/MavenMetadata$MavenMetadataVersioning$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/MavenMetadata$MavenMetadataVersioning$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/MavenMetadata$MavenMetadataVersioning;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/MavenMetadata$MavenMetadataVersioning;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/MavenMetadata$MavenMetadataVersioning$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/ModuleDescriptor {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Companion;
	public fun <init> (Ljava/lang/String;Ljava/util/List;Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources;
	public final fun copy (Ljava/lang/String;Ljava/util/List;Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources;)Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor;Ljava/lang/String;Ljava/util/List;Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDependencies ()Ljava/util/List;
	public final fun getName ()Ljava/lang/String;
	public final fun getResources ()Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Dependency {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Dependency$Companion;
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Dependency;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Dependency;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Dependency;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Dependency$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Dependency$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Dependency;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Dependency;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Dependency$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources$Companion;
	public fun <init> (Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources$ResourceRoot;)V
	public final fun component1 ()Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources$ResourceRoot;
	public final fun copy (Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources$ResourceRoot;)Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources;Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources$ResourceRoot;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getResourceRoot ()Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources$ResourceRoot;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources$ResourceRoot {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources$ResourceRoot$Companion;
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources$ResourceRoot;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources$ResourceRoot;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources$ResourceRoot;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getPath ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources$ResourceRoot$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources$ResourceRoot$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources$ResourceRoot;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources$ResourceRoot;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/ModuleDescriptor$Resources$ResourceRoot$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/PerformanceTestResult {
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestStatistic;Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestScript;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestStatistic;
	public final fun component3 ()Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestScript;
	public final fun copy (Ljava/lang/String;Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestStatistic;Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestScript;)Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestResult;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestResult;Ljava/lang/String;Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestStatistic;Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestScript;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getScript ()Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestScript;
	public final fun getStatistic ()Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestStatistic;
	public final fun getTestName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/PerformanceTestScript {
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAssertionTimeout ()Ljava/lang/Long;
	public final fun getProjectName ()Ljava/lang/String;
	public final fun getScriptContent ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/PerformanceTestScript$Builder {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun appendScriptContent (Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestScript$Builder;
	public final fun assertionTimeout (Ljava/lang/Long;)Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestScript$Builder;
	public final fun build ()Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestScript;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/Long;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;)Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestScript$Builder;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestScript$Builder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestScript$Builder;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAssertionTimeout ()Ljava/lang/Long;
	public final fun getProjectName ()Ljava/lang/String;
	public final fun getScriptContent ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun projectName (Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestScript$Builder;
	public final fun scriptContent (Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestScript$Builder;
	public final fun setAssertionTimeout (Ljava/lang/Long;)V
	public final fun setProjectName (Ljava/lang/String;)V
	public final fun setScriptContent (Ljava/lang/String;)V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/PerformanceTestStatistic {
	public synthetic fun <init> (Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAverageResponsive ()Ljava/lang/Long;
	public final fun getResponsive ()Ljava/lang/Long;
	public final fun getTotalTime ()Ljava/lang/Long;
}

public final class org/jetbrains/intellij/platform/gradle/models/PerformanceTestStatistic$Builder {
	public fun <init> ()V
	public fun <init> (Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;)V
	public synthetic fun <init> (Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun averageResponsive (Ljava/lang/Long;)Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestStatistic$Builder;
	public final fun build ()Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestStatistic;
	public final fun component1 ()Ljava/lang/Long;
	public final fun component2 ()Ljava/lang/Long;
	public final fun component3 ()Ljava/lang/Long;
	public final fun copy (Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;)Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestStatistic$Builder;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestStatistic$Builder;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestStatistic$Builder;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAverageResponsive ()Ljava/lang/Long;
	public final fun getResponsive ()Ljava/lang/Long;
	public final fun getTotalTime ()Ljava/lang/Long;
	public fun hashCode ()I
	public final fun responsive (Ljava/lang/Long;)Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestStatistic$Builder;
	public final fun setAverageResponsive (Ljava/lang/Long;)V
	public final fun setResponsive (Ljava/lang/Long;)V
	public final fun setTotalTime (Ljava/lang/Long;)V
	public fun toString ()Ljava/lang/String;
	public final fun totalTime (Ljava/lang/Long;)Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestStatistic$Builder;
}

public final class org/jetbrains/intellij/platform/gradle/models/PluginsCache {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/PluginsCache$Companion;
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lorg/jetbrains/intellij/platform/gradle/models/PluginsCache;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/PluginsCache;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/PluginsCache;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getPlugins ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/PluginsCache$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/PluginsCache$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/PluginsCache;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/PluginsCache;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/PluginsCache$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/PluginsCache$PluginsCachePlugin {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/PluginsCache$PluginsCachePlugin$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lorg/jetbrains/intellij/platform/gradle/models/PluginsCache$PluginsCachePlugin;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/PluginsCache$PluginsCachePlugin;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/PluginsCache$PluginsCachePlugin;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDependencies ()Ljava/util/List;
	public final fun getDirectoryName ()Ljava/lang/String;
	public final fun getId ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/PluginsCache$PluginsCachePlugin$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/PluginsCache$PluginsCachePlugin$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/PluginsCache$PluginsCachePlugin;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/PluginsCache$PluginsCachePlugin;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/PluginsCache$PluginsCachePlugin$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/ProductInfo : java/io/Serializable {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Ljava/util/List;
	public final fun component11 ()Ljava/util/List;
	public final fun component12 ()Ljava/util/List;
	public final fun component13 ()Ljava/util/List;
	public final fun component14 ()Ljava/util/List;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ljava/lang/String;
	public final fun component8 ()Ljava/lang/String;
	public final fun component9 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBuildNumber ()Ljava/lang/String;
	public final fun getBundledPlugins ()Ljava/util/List;
	public final fun getCustomProperties ()Ljava/util/List;
	public final fun getDataDirectoryName ()Ljava/lang/String;
	public final fun getFileExtensions ()Ljava/util/List;
	public final fun getLaunch ()Ljava/util/List;
	public final fun getLayout ()Ljava/util/List;
	public final fun getModules ()Ljava/util/List;
	public final fun getName ()Ljava/lang/String;
	public final fun getProductCode ()Ljava/lang/String;
	public final fun getProductVendor ()Ljava/lang/String;
	public final fun getSvgIconPath ()Ljava/lang/String;
	public final fun getVersion ()Ljava/lang/String;
	public final fun getVersionSuffix ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/ProductInfo$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/ProductInfo$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/ProductInfo$CustomProperty : java/io/Serializable {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$CustomProperty$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$CustomProperty;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$CustomProperty;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$CustomProperty;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getKey ()Ljava/lang/String;
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/ProductInfo$CustomProperty$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$CustomProperty$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$CustomProperty;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$CustomProperty;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/ProductInfo$CustomProperty$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch : java/io/Serializable {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch$Companion;
	public fun <init> ()V
	public fun <init> (Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch$OS;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V
	public synthetic fun <init> (Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch$OS;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch$OS;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ljava/util/List;
	public final fun component8 ()Ljava/util/List;
	public final fun copy (Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch$OS;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch;Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch$OS;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAdditionalJvmArguments ()Ljava/util/List;
	public final fun getArch ()Ljava/lang/String;
	public final fun getBootClassPathJarNames ()Ljava/util/List;
	public final fun getJavaExecutablePath ()Ljava/lang/String;
	public final fun getLauncherPath ()Ljava/lang/String;
	public final fun getOs ()Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch$OS;
	public final fun getStartupWmClass ()Ljava/lang/String;
	public final fun getVmOptionsFilePath ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch$OS : java/lang/Enum {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch$OS$Companion;
	public static final field Linux Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch$OS;
	public static final field Windows Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch$OS;
	public static final field macOS Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch$OS;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch$OS;
	public static fun values ()[Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch$OS;
}

public final class org/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch$OS$Companion {
	public final fun from (Lorg/gradle/internal/os/OperatingSystem;)Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch$OS;
	public final fun getCurrent ()Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$Launch$OS;
}

public final class org/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItem : java/io/Serializable {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItem$Companion;
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItemKind;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItemKind;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItemKind;
	public final fun component3 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItemKind;Ljava/util/List;)Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItem;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItem;Ljava/lang/String;Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItemKind;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItem;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getClassPath ()Ljava/util/List;
	public final fun getKind ()Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItemKind;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItem$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItem$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItem;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItem;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItem$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItemKind : java/lang/Enum {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItemKind$Companion;
	public static final field moduleV2 Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItemKind;
	public static final field plugin Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItemKind;
	public static final field pluginAlias Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItemKind;
	public static final field productModuleV2 Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItemKind;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItemKind;
	public static fun values ()[Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItemKind;
}

public final class org/jetbrains/intellij/platform/gradle/models/ProductInfo$LayoutItemKind$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/models/ProductInfoKt {
	public static final fun getFullVersion (Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo;)Ljava/lang/String;
	public static final fun productInfo (Ljava/nio/file/Path;)Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo;
	public static final fun productInfo (Lorg/gradle/api/file/FileCollection;)Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo;
	public static final fun validateSupportedVersion (Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo;)V
}

public final class org/jetbrains/intellij/platform/gradle/models/ProductRelease {
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;Lorg/jetbrains/intellij/platform/gradle/models/ProductRelease$Channel;Lorg/jetbrains/intellij/platform/gradle/utils/Version;Lorg/jetbrains/intellij/platform/gradle/utils/Version;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
	public final fun component3 ()Lorg/jetbrains/intellij/platform/gradle/models/ProductRelease$Channel;
	public final fun component4 ()Lorg/jetbrains/intellij/platform/gradle/utils/Version;
	public final fun component5 ()Lorg/jetbrains/intellij/platform/gradle/utils/Version;
	public final fun component6 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;Lorg/jetbrains/intellij/platform/gradle/models/ProductRelease$Channel;Lorg/jetbrains/intellij/platform/gradle/utils/Version;Lorg/jetbrains/intellij/platform/gradle/utils/Version;Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/models/ProductRelease;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/models/ProductRelease;Ljava/lang/String;Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;Lorg/jetbrains/intellij/platform/gradle/models/ProductRelease$Channel;Lorg/jetbrains/intellij/platform/gradle/utils/Version;Lorg/jetbrains/intellij/platform/gradle/utils/Version;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/models/ProductRelease;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBuild ()Lorg/jetbrains/intellij/platform/gradle/utils/Version;
	public final fun getChannel ()Lorg/jetbrains/intellij/platform/gradle/models/ProductRelease$Channel;
	public final fun getId ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getType ()Lorg/jetbrains/intellij/platform/gradle/IntelliJPlatformType;
	public final fun getVersion ()Lorg/jetbrains/intellij/platform/gradle/utils/Version;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/models/ProductRelease$Channel : java/lang/Enum {
	public static final field BETA Lorg/jetbrains/intellij/platform/gradle/models/ProductRelease$Channel;
	public static final field CANARY Lorg/jetbrains/intellij/platform/gradle/models/ProductRelease$Channel;
	public static final field EAP Lorg/jetbrains/intellij/platform/gradle/models/ProductRelease$Channel;
	public static final field MILESTONE Lorg/jetbrains/intellij/platform/gradle/models/ProductRelease$Channel;
	public static final field PATCH Lorg/jetbrains/intellij/platform/gradle/models/ProductRelease$Channel;
	public static final field PREVIEW Lorg/jetbrains/intellij/platform/gradle/models/ProductRelease$Channel;
	public static final field RC Lorg/jetbrains/intellij/platform/gradle/models/ProductRelease$Channel;
	public static final field RELEASE Lorg/jetbrains/intellij/platform/gradle/models/ProductRelease$Channel;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/models/ProductRelease$Channel;
	public static fun values ()[Lorg/jetbrains/intellij/platform/gradle/models/ProductRelease$Channel;
}

public final class org/jetbrains/intellij/platform/gradle/performanceTest/ProfilerName : java/lang/Enum {
	public static final field ASYNC Lorg/jetbrains/intellij/platform/gradle/performanceTest/ProfilerName;
	public static final field YOURKIT Lorg/jetbrains/intellij/platform/gradle/performanceTest/ProfilerName;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/performanceTest/ProfilerName;
	public static fun values ()[Lorg/jetbrains/intellij/platform/gradle/performanceTest/ProfilerName;
}

public final class org/jetbrains/intellij/platform/gradle/performanceTest/TestExecutionFailException : java/lang/RuntimeException {
	public fun <init> (Ljava/lang/String;)V
}

public final class org/jetbrains/intellij/platform/gradle/performanceTest/parsers/IdeaLogParser {
	public fun <init> (Ljava/lang/String;)V
	public final fun getTestStatistic ()Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestStatistic;
}

public final class org/jetbrains/intellij/platform/gradle/performanceTest/parsers/SimpleIJPerformanceParser {
	public fun <init> (Ljava/nio/file/Path;)V
	public final fun parse ()Lorg/jetbrains/intellij/platform/gradle/models/PerformanceTestScript;
}

public abstract class org/jetbrains/intellij/platform/gradle/plugins/project/DownloadRobotServerPluginTask : org/gradle/api/DefaultTask {
	public fun <init> ()V
	public abstract fun getVersion ()Lorg/gradle/api/provider/Property;
}

public abstract class org/jetbrains/intellij/platform/gradle/plugins/project/IntelliJExtension : org/jetbrains/intellij/platform/gradle/extensions/IntelliJPlatformExtension {
	public fun <init> (Lorg/gradle/api/artifacts/ConfigurationContainer;Lorg/gradle/api/provider/ProviderFactory;Ljava/nio/file/Path;)V
	public abstract fun getDownloadSources ()Lorg/gradle/api/provider/Property;
	public abstract fun getIdeaDependency ()Lorg/gradle/api/provider/Property;
	public abstract fun getIntellijRepository ()Lorg/gradle/api/provider/Property;
	public abstract fun getJreRepository ()Lorg/gradle/api/provider/Property;
	public abstract fun getLocalPath ()Lorg/gradle/api/provider/Property;
	public abstract fun getLocalSourcesPath ()Lorg/gradle/api/provider/Property;
	public abstract fun getPluginName ()Lorg/gradle/api/provider/Property;
	public abstract fun getPlugins ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getPluginsRepositories ()Lorg/gradle/api/provider/Property;
	public abstract fun getSameSinceUntilBuild ()Lorg/gradle/api/provider/Property;
	public abstract fun getSandboxDir ()Lorg/gradle/api/provider/Property;
	public abstract fun getType ()Lorg/gradle/api/provider/Property;
	public abstract fun getUpdateSinceUntilBuild ()Lorg/gradle/api/provider/Property;
	public abstract fun getVersion ()Lorg/gradle/api/provider/Property;
}

public abstract class org/jetbrains/intellij/platform/gradle/plugins/project/IntelliJPlatformBasePlugin : org/gradle/api/Plugin {
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/plugins/project/IntelliJPlatformMigrationPlugin : org/gradle/api/Plugin {
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/plugins/project/IntelliJPlatformModulePlugin : org/gradle/api/Plugin {
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/plugins/project/IntelliJPlatformPlugin : org/gradle/api/Plugin {
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/plugins/project/RunIdeForUiTestsTask : org/gradle/api/DefaultTask {
	public fun <init> ()V
	public final fun systemProperty ([Ljava/lang/Object;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/plugins/project/RunPluginVerifierTask : org/gradle/api/DefaultTask {
	public fun <init> ()V
	public abstract fun getDistributionFile ()Lorg/gradle/api/provider/Property;
	public abstract fun getDownloadDir ()Lorg/gradle/api/provider/Property;
	public abstract fun getDownloadPath ()Lorg/gradle/api/provider/Property;
	public abstract fun getExternalPrefixes ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getFailureLevel ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getFreeArgs ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getIdeDir ()Lorg/gradle/api/provider/Property;
	public abstract fun getIdeVersions ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getIgnoredProblems ()Lorg/gradle/api/provider/Property;
	public abstract fun getJbrArch ()Lorg/gradle/api/provider/Property;
	public abstract fun getJbrVariant ()Lorg/gradle/api/provider/Property;
	public abstract fun getJbrVersion ()Lorg/gradle/api/provider/Property;
	public abstract fun getJreRepository ()Lorg/gradle/api/provider/Property;
	public abstract fun getLocalPaths ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getOffline ()Lorg/gradle/api/provider/Property;
	public abstract fun getProductsReleasesFile ()Lorg/gradle/api/provider/Property;
	public abstract fun getResolvedRuntimeDir ()Lorg/gradle/api/provider/Property;
	public abstract fun getRuntimeDir ()Lorg/gradle/api/provider/Property;
	public abstract fun getSubsystemsToCheck ()Lorg/gradle/api/provider/Property;
	public abstract fun getTeamCityOutputFormat ()Lorg/gradle/api/provider/Property;
	public abstract fun getVerificationReportsDir ()Lorg/gradle/api/provider/Property;
	public abstract fun getVerificationReportsFormats ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getVerifierPath ()Lorg/gradle/api/provider/Property;
	public abstract fun getVerifierVersion ()Lorg/gradle/api/provider/Property;
}

public abstract class org/jetbrains/intellij/platform/gradle/plugins/settings/IntelliJPlatformSettingsPlugin : org/gradle/api/Plugin {
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/initialization/Settings;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/providers/AndroidStudioDownloadLinkValueSource : org/gradle/api/provider/ValueSource {
	public fun <init> ()V
	public synthetic fun obtain ()Ljava/lang/Object;
	public fun obtain ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/providers/AndroidStudioDownloadLinkValueSource$Parameters : org/gradle/api/provider/ValueSourceParameters {
	public abstract fun getAndroidStudioUrl ()Lorg/gradle/api/provider/Property;
	public abstract fun getAndroidStudioVersion ()Lorg/gradle/api/provider/Property;
}

public abstract class org/jetbrains/intellij/platform/gradle/providers/CurrentPluginVersionValueSource : org/gradle/api/provider/ValueSource {
	public fun <init> ()V
	public synthetic fun obtain ()Ljava/lang/Object;
	public fun obtain ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/providers/Data {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/providers/Data$Companion;
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lorg/jetbrains/intellij/platform/gradle/providers/Data;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/providers/Data;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/providers/Data;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getItems ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/providers/Data$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/providers/Data$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/providers/Data;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/providers/Data;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/providers/Data$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/providers/Data$Item {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/providers/Data$Item$Companion;
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/providers/Data$Item;
	public static synthetic fun copy$default (Lorg/jetbrains/intellij/platform/gradle/providers/Data$Item;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/intellij/platform/gradle/providers/Data$Item;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/providers/Data$Item$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lorg/jetbrains/intellij/platform/gradle/providers/Data$Item$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/jetbrains/intellij/platform/gradle/providers/Data$Item;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/jetbrains/intellij/platform/gradle/providers/Data$Item;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class org/jetbrains/intellij/platform/gradle/providers/Data$Item$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class org/jetbrains/intellij/platform/gradle/providers/JavaRuntimeMetadataValueSource : org/gradle/api/provider/ValueSource {
	public fun <init> ()V
	public abstract fun getExecOperations ()Lorg/gradle/process/ExecOperations;
	public synthetic fun obtain ()Ljava/lang/Object;
	public fun obtain ()Ljava/util/Map;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/providers/JavaRuntimeMetadataValueSource$Parameters : org/gradle/api/provider/ValueSourceParameters {
	public abstract fun getExecutable ()Lorg/gradle/api/file/RegularFileProperty;
}

public abstract class org/jetbrains/intellij/platform/gradle/providers/LatestPluginVersionValueSource : org/gradle/api/provider/ValueSource {
	public fun <init> ()V
	public synthetic fun obtain ()Ljava/lang/Object;
	public fun obtain ()Ljava/lang/String;
}

public abstract class org/jetbrains/intellij/platform/gradle/providers/ModuleDescriptorsValueSource : org/gradle/api/provider/ValueSource {
	public fun <init> ()V
	public synthetic fun obtain ()Ljava/lang/Object;
	public fun obtain ()Ljava/util/Set;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/providers/ModuleDescriptorsValueSource$Parameters : org/gradle/api/provider/ValueSourceParameters {
	public abstract fun getIntellijPlatformPath ()Lorg/gradle/api/file/DirectoryProperty;
}

public abstract class org/jetbrains/intellij/platform/gradle/providers/ProductReleasesValueSource : org/gradle/api/provider/ValueSource {
	public fun <init> ()V
	public synthetic fun obtain ()Ljava/lang/Object;
	public fun obtain ()Ljava/util/List;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/providers/ProductReleasesValueSource$FilterParameters : org/gradle/api/provider/ValueSourceParameters {
	public abstract fun getChannels ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getSinceBuild ()Lorg/gradle/api/provider/Property;
	public abstract fun getTypes ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getUntilBuild ()Lorg/gradle/api/provider/Property;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/providers/ProductReleasesValueSource$Parameters : org/jetbrains/intellij/platform/gradle/providers/ProductReleasesValueSource$FilterParameters {
	public abstract fun getAndroidStudioUrl ()Lorg/gradle/api/provider/Property;
	public abstract fun getJetbrainsIdesUrl ()Lorg/gradle/api/provider/Property;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/resolvers/Resolver {
	public abstract fun getSubject ()Ljava/lang/String;
	public fun getSubjectInput ()Ljava/lang/Object;
	public abstract fun resolve ()Ljava/lang/Object;
	public fun resolve (Lkotlin/sequences/Sequence;)Ljava/lang/Object;
}

public final class org/jetbrains/intellij/platform/gradle/resolvers/path/IntelliJPluginVerifierPathResolver : org/jetbrains/intellij/platform/gradle/resolvers/path/PathResolver {
	public fun <init> (Lorg/gradle/api/file/FileCollection;Lorg/gradle/api/provider/Provider;)V
	public fun getPredictions ()Lkotlin/sequences/Sequence;
	public fun getSubject ()Ljava/lang/String;
	public synthetic fun getSubjectInput ()Ljava/lang/Object;
	public fun getSubjectInput ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/resolvers/path/JavaRuntimePathResolver : org/jetbrains/intellij/platform/gradle/resolvers/path/PathResolver {
	public fun <init> (Lorg/gradle/api/file/FileCollection;Lorg/gradle/api/file/FileCollection;Lorg/gradle/jvm/toolchain/JavaToolchainSpec;Lorg/gradle/jvm/toolchain/JavaToolchainService;)V
	public fun getPredictions ()Lkotlin/sequences/Sequence;
	public fun getSubject ()Ljava/lang/String;
	public synthetic fun getSubjectInput ()Ljava/lang/Object;
	public fun getSubjectInput ()Ljava/lang/String;
	public final fun resolveExecutable ()Ljava/nio/file/Path;
}

public final class org/jetbrains/intellij/platform/gradle/resolvers/path/MarketplaceZipSignerPathResolver : org/jetbrains/intellij/platform/gradle/resolvers/path/PathResolver {
	public fun <init> (Lorg/gradle/api/file/FileCollection;Lorg/gradle/api/provider/Provider;)V
	public fun getPredictions ()Lkotlin/sequences/Sequence;
	public fun getSubject ()Ljava/lang/String;
	public synthetic fun getSubjectInput ()Ljava/lang/Object;
	public fun getSubjectInput ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/resolvers/path/ModuleDescriptorsPathResolver : org/jetbrains/intellij/platform/gradle/resolvers/path/PathResolver {
	public fun <init> (Ljava/nio/file/Path;)V
	public fun getPredictions ()Lkotlin/sequences/Sequence;
	public fun getSubject ()Ljava/lang/String;
	public synthetic fun getSubjectInput ()Ljava/lang/Object;
	public fun getSubjectInput ()Ljava/nio/file/Path;
}

public abstract class org/jetbrains/intellij/platform/gradle/resolvers/path/PathResolver : org/jetbrains/intellij/platform/gradle/resolvers/Resolver {
	public fun <init> ()V
	public abstract fun getPredictions ()Lkotlin/sequences/Sequence;
	public synthetic fun resolve ()Ljava/lang/Object;
	public fun resolve ()Ljava/nio/file/Path;
}

public final class org/jetbrains/intellij/platform/gradle/resolvers/path/ProductInfoPathResolver : org/jetbrains/intellij/platform/gradle/resolvers/path/PathResolver {
	public fun <init> (Ljava/nio/file/Path;)V
	public fun getPredictions ()Lkotlin/sequences/Sequence;
	public fun getSubject ()Ljava/lang/String;
	public synthetic fun getSubjectInput ()Ljava/lang/Object;
	public fun getSubjectInput ()Ljava/nio/file/Path;
}

public abstract class org/jetbrains/intellij/platform/gradle/services/ShimManagerService : java/lang/AutoCloseable, org/gradle/api/services/BuildService {
	public fun <init> ()V
	public fun close ()V
	public final fun start (Lorg/jetbrains/intellij/platform/gradle/artifacts/repositories/BaseArtifactRepository;)Lorg/jetbrains/intellij/platform/gradle/shim/Shim$Server;
	public final fun stop (Ljava/net/URI;)V
}

public abstract interface class org/jetbrains/intellij/platform/gradle/services/ShimManagerService$Parameters : org/gradle/api/services/BuildServiceParameters {
	public abstract fun getPort ()Lorg/gradle/api/provider/Property;
}

public final class org/jetbrains/intellij/platform/gradle/shim/PluginArtifactoryShim : org/jetbrains/intellij/platform/gradle/shim/Shim {
	public fun <init> (Lorg/jetbrains/intellij/platform/gradle/artifacts/repositories/PluginArtifactRepository;I)V
	public fun getRoutingHandler ()Lio/undertow/server/RoutingHandler;
}

public final class org/jetbrains/intellij/platform/gradle/shim/PluginArtifactoryShim$PluginArtifactRepositoryProxyClient : org/jetbrains/intellij/platform/gradle/shim/Shim$ShimProxyClient {
	public fun <init> (Lorg/jetbrains/intellij/platform/gradle/shim/PluginArtifactoryShim;Ljava/net/URI;)V
	public fun resolveUrl (Lio/undertow/server/HttpServerExchange;)Ljava/lang/String;
}

public abstract class org/jetbrains/intellij/platform/gradle/shim/Shim {
	public fun <init> (Lorg/jetbrains/intellij/platform/gradle/artifacts/repositories/BaseArtifactRepository;I)V
	public abstract fun getRoutingHandler ()Lio/undertow/server/RoutingHandler;
	public final fun start ()Lorg/jetbrains/intellij/platform/gradle/shim/Shim$Server;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/shim/Shim$Server : java/io/Closeable {
	public abstract fun close ()V
	public abstract fun getUrl ()Ljava/net/URI;
}

public abstract class org/jetbrains/intellij/platform/gradle/shim/Shim$ShimProxyClient : io/undertow/server/handlers/proxy/ProxyClient {
	public fun <init> (Lorg/jetbrains/intellij/platform/gradle/shim/Shim;Ljava/net/URI;)V
	public fun findTarget (Lio/undertow/server/HttpServerExchange;)Lio/undertow/server/handlers/proxy/ProxyClient$ProxyTarget;
	public fun getConnection (Lio/undertow/server/handlers/proxy/ProxyClient$ProxyTarget;Lio/undertow/server/HttpServerExchange;Lio/undertow/server/handlers/proxy/ProxyCallback;JLjava/util/concurrent/TimeUnit;)V
	public abstract fun resolveUrl (Lio/undertow/server/HttpServerExchange;)Ljava/lang/String;
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/BuildPluginTask : org/gradle/api/tasks/bundling/Zip {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/BuildPluginTask$Companion;
	public fun <init> ()V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/BuildPluginTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/BuildSearchableOptionsTask : org/gradle/api/tasks/JavaExec, org/jetbrains/intellij/platform/gradle/tasks/aware/RunnableIdeAware {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/BuildSearchableOptionsTask$Companion;
	public fun <init> ()V
	public fun exec ()V
	public abstract fun getOutputDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getShowPaidPluginWarning ()Lorg/gradle/api/provider/Property;
}

public final class org/jetbrains/intellij/platform/gradle/tasks/BuildSearchableOptionsTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/ComposedJarTask : org/gradle/jvm/tasks/Jar {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/ComposedJarTask$Companion;
	public fun <init> ()V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/ComposedJarTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/GenerateManifestTask : org/gradle/api/DefaultTask, org/jetbrains/intellij/platform/gradle/tasks/aware/KotlinMetadataAware {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/GenerateManifestTask$Companion;
	public fun <init> ()V
	public final fun generate ()V
	public abstract fun getGeneratedManifest ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getGradleVersion ()Lorg/gradle/api/provider/Property;
	public abstract fun getPluginVersion ()Lorg/gradle/api/provider/Property;
	public abstract fun getProductInfo ()Lorg/gradle/api/provider/Property;
	public abstract fun getVersion ()Lorg/gradle/api/provider/Property;
}

public final class org/jetbrains/intellij/platform/gradle/tasks/GenerateManifestTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/InitializeIntelliJPlatformPluginTask : org/gradle/api/DefaultTask, org/jetbrains/intellij/platform/gradle/tasks/aware/IntelliJPlatformVersionAware {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/InitializeIntelliJPlatformPluginTask$Companion;
	public fun <init> ()V
	public abstract fun getCoroutinesJavaAgent ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getLatestPluginVersion ()Lorg/gradle/api/provider/Property;
	public abstract fun getModule ()Lorg/gradle/api/provider/Property;
	public abstract fun getOffline ()Lorg/gradle/api/provider/Property;
	public abstract fun getPluginVersion ()Lorg/gradle/api/provider/Property;
	public abstract fun getSelfUpdateCheck ()Lorg/gradle/api/provider/Property;
	public abstract fun getSelfUpdateLock ()Lorg/gradle/api/file/RegularFileProperty;
	public final fun initialize ()V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/InitializeIntelliJPlatformPluginTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/InstrumentCodeTask : org/gradle/api/DefaultTask, org/jetbrains/intellij/platform/gradle/tasks/aware/JavaCompilerAware {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/InstrumentCodeTask$Companion;
	public fun <init> ()V
	public abstract fun getClassesDirs ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getFormsDirs ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getInstrumentationLogs ()Lorg/gradle/api/provider/Property;
	public abstract fun getOutputDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getSourceDirs ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getSourceSetCompileClasspath ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public final fun instrumentCode-IoAF18A (Lorg/gradle/work/InputChanges;)Ljava/lang/Object;
}

public final class org/jetbrains/intellij/platform/gradle/tasks/InstrumentCodeTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/InstrumentedJarTask : org/gradle/jvm/tasks/Jar {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/InstrumentedJarTask$Companion;
	public fun <init> ()V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/InstrumentedJarTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/JarSearchableOptionsTask : org/gradle/jvm/tasks/Jar {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/JarSearchableOptionsTask$Companion;
	public fun <init> ()V
	protected fun copy ()V
	public abstract fun getNoSearchableOptionsWarning ()Lorg/gradle/api/provider/Property;
}

public final class org/jetbrains/intellij/platform/gradle/tasks/JarSearchableOptionsTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/PatchPluginXmlTask : org/gradle/api/DefaultTask, org/jetbrains/intellij/platform/gradle/tasks/aware/IntelliJPlatformVersionAware {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/PatchPluginXmlTask$Companion;
	public fun <init> ()V
	public abstract fun getChangeNotes ()Lorg/gradle/api/provider/Property;
	public abstract fun getInputFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getOutputFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getPluginDescription ()Lorg/gradle/api/provider/Property;
	public abstract fun getPluginId ()Lorg/gradle/api/provider/Property;
	public abstract fun getPluginName ()Lorg/gradle/api/provider/Property;
	public abstract fun getPluginVersion ()Lorg/gradle/api/provider/Property;
	public abstract fun getProductDescriptorCode ()Lorg/gradle/api/provider/Property;
	public abstract fun getProductDescriptorEap ()Lorg/gradle/api/provider/Property;
	public abstract fun getProductDescriptorOptional ()Lorg/gradle/api/provider/Property;
	public abstract fun getProductDescriptorReleaseDate ()Lorg/gradle/api/provider/Property;
	public abstract fun getProductDescriptorReleaseVersion ()Lorg/gradle/api/provider/Property;
	public abstract fun getSinceBuild ()Lorg/gradle/api/provider/Property;
	public abstract fun getUntilBuild ()Lorg/gradle/api/provider/Property;
	public abstract fun getVendorEmail ()Lorg/gradle/api/provider/Property;
	public abstract fun getVendorName ()Lorg/gradle/api/provider/Property;
	public abstract fun getVendorUrl ()Lorg/gradle/api/provider/Property;
	public final fun patchPluginXml ()V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/PatchPluginXmlTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/PrepareJarSearchableOptionsTask : org/gradle/api/DefaultTask {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/PrepareJarSearchableOptionsTask$Companion;
	public fun <init> (Lorg/gradle/api/file/FileSystemOperations;)V
	public abstract fun getComposedJarFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getInputDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getLibContainer ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getOutputDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public final fun prepareJarSearchableOptions ()V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/PrepareJarSearchableOptionsTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/PrepareSandboxTask : org/gradle/api/tasks/Sync, org/jetbrains/intellij/platform/gradle/tasks/aware/IntelliJPlatformVersionAware, org/jetbrains/intellij/platform/gradle/tasks/aware/SandboxStructure, org/jetbrains/intellij/platform/gradle/tasks/aware/SplitModeAware {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/PrepareSandboxTask$Companion;
	public fun <init> ()V
	public synthetic fun configure (Lgroovy/lang/Closure;)Ljava/lang/Object;
	public fun configure (Lgroovy/lang/Closure;)Lorg/gradle/api/Task;
	protected fun copy ()V
	public abstract fun getDefaultDestinationDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public fun getDestinationDir ()Ljava/io/File;
	public abstract fun getDisabledPlugins ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getPluginDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getPluginJar ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getPluginName ()Lorg/gradle/api/provider/Property;
	public abstract fun getPluginsClasspath ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getRuntimeClasspath ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getSandboxSuffix ()Lorg/gradle/api/provider/Property;
	public final fun intoChild (Ljava/lang/Object;)Lorg/gradle/api/file/CopySpec;
}

public final class org/jetbrains/intellij/platform/gradle/tasks/PrepareSandboxTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/PrepareTestTask : org/gradle/api/DefaultTask, org/jetbrains/intellij/platform/gradle/tasks/aware/TestableAware {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/PrepareTestTask$Companion;
	public fun <init> ()V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/PrepareTestTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/PrepareTestTask$Companion$register$1$inlined$sam$i$org_gradle_api_Action$0 : org/gradle/api/Action {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public final synthetic fun execute (Ljava/lang/Object;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/PrintBundledPluginsTask : org/gradle/api/DefaultTask, org/jetbrains/intellij/platform/gradle/tasks/aware/IntelliJPlatformVersionAware {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/PrintBundledPluginsTask$Companion;
	public fun <init> ()V
	public final fun printBundledPlugins ()V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/PrintBundledPluginsTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/PrintProductsReleasesTask : org/gradle/api/DefaultTask, org/jetbrains/intellij/platform/gradle/providers/ProductReleasesValueSource$FilterParameters {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/PrintProductsReleasesTask$Companion;
	public fun <init> ()V
	public abstract fun getProductsReleases ()Lorg/gradle/api/provider/ListProperty;
	public final fun printProductsReleases ()V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/PrintProductsReleasesTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/PublishPluginTask : org/gradle/api/DefaultTask {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/PublishPluginTask$Companion;
	public fun <init> ()V
	public abstract fun getArchiveFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getChannels ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getHidden ()Lorg/gradle/api/provider/Property;
	public abstract fun getHost ()Lorg/gradle/api/provider/Property;
	public abstract fun getIdeServices ()Lorg/gradle/api/provider/Property;
	public abstract fun getToken ()Lorg/gradle/api/provider/Property;
	public final fun publishPlugin ()V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/PublishPluginTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/RunIdeTask : org/gradle/api/tasks/JavaExec, org/jetbrains/intellij/platform/gradle/tasks/aware/IntelliJPlatformVersionAware, org/jetbrains/intellij/platform/gradle/tasks/aware/RunnableIdeAware, org/jetbrains/intellij/platform/gradle/tasks/aware/SplitModeAware {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/RunIdeTask$Companion;
	public fun <init> ()V
	public fun exec ()V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/RunIdeTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/SetupDependenciesTask : org/gradle/api/DefaultTask {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/SetupDependenciesTask$Companion;
	public fun <init> ()V
	public final fun setupDependencies ()V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/SetupDependenciesTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/SignPluginTask : org/gradle/api/tasks/JavaExec, org/jetbrains/intellij/platform/gradle/tasks/aware/SigningAware {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/SignPluginTask$Companion;
	public fun <init> ()V
	public fun exec ()V
	public abstract fun getArchiveFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getCertificateChain ()Lorg/gradle/api/provider/Property;
	public abstract fun getCertificateChainFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getKeyStore ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getKeyStoreKeyAlias ()Lorg/gradle/api/provider/Property;
	public abstract fun getKeyStorePassword ()Lorg/gradle/api/provider/Property;
	public abstract fun getKeyStoreProviderName ()Lorg/gradle/api/provider/Property;
	public abstract fun getKeyStoreType ()Lorg/gradle/api/provider/Property;
	public abstract fun getPassword ()Lorg/gradle/api/provider/Property;
	public abstract fun getPrivateKey ()Lorg/gradle/api/provider/Property;
	public abstract fun getPrivateKeyFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getSignedArchiveFile ()Lorg/gradle/api/file/RegularFileProperty;
}

public final class org/jetbrains/intellij/platform/gradle/tasks/SignPluginTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/TasksKt$inlined$sam$i$org_gradle_api_Action$0 : org/gradle/api/Action {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public final synthetic fun execute (Ljava/lang/Object;)V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/TasksKt$sam$i$org_gradle_api_Action$0 : org/gradle/api/Action {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public final synthetic fun execute (Ljava/lang/Object;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/TestIdePerformanceTask : org/gradle/api/tasks/JavaExec, org/jetbrains/intellij/platform/gradle/tasks/aware/IntelliJPlatformVersionAware, org/jetbrains/intellij/platform/gradle/tasks/aware/RunnableIdeAware, org/jetbrains/intellij/platform/gradle/tasks/aware/TestableAware {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/TestIdePerformanceTask$Companion;
	public fun <init> ()V
	public fun exec ()V
	public abstract fun getArtifactsDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getProfilerName ()Lorg/gradle/api/provider/Property;
	public abstract fun getTestDataDirectory ()Lorg/gradle/api/file/DirectoryProperty;
}

public final class org/jetbrains/intellij/platform/gradle/tasks/TestIdePerformanceTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/TestIdeTask : org/gradle/api/tasks/testing/Test, org/jetbrains/intellij/platform/gradle/tasks/aware/IntelliJPlatformVersionAware, org/jetbrains/intellij/platform/gradle/tasks/aware/TestableAware {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/TestIdeTask$Companion;
	public fun <init> ()V
	public fun executeTests ()V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/TestIdeTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/TestIdeUiTask : org/gradle/api/tasks/testing/Test, org/jetbrains/intellij/platform/gradle/tasks/aware/TestableAware {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/TestIdeUiTask$Companion;
	public fun <init> ()V
	public fun executeTests ()V
	public abstract fun getArchiveFile ()Lorg/gradle/api/file/RegularFileProperty;
}

public final class org/jetbrains/intellij/platform/gradle/tasks/TestIdeUiTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/VerifyPluginProjectConfigurationTask : org/gradle/api/DefaultTask, org/jetbrains/intellij/platform/gradle/tasks/aware/IntelliJPlatformVersionAware, org/jetbrains/intellij/platform/gradle/tasks/aware/KotlinMetadataAware, org/jetbrains/intellij/platform/gradle/tasks/aware/RuntimeAware {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginProjectConfigurationTask$Companion;
	public fun <init> ()V
	public abstract fun getGitignoreFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getIntellijPlatformCache ()Lorg/gradle/api/provider/Property;
	public abstract fun getModule ()Lorg/gradle/api/provider/Property;
	public abstract fun getPluginXml ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getReportDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getRootDirectory ()Lorg/gradle/api/provider/Property;
	public abstract fun getSourceCompatibility ()Lorg/gradle/api/provider/Property;
	public abstract fun getTargetCompatibility ()Lorg/gradle/api/provider/Property;
	public final fun verifyPluginConfiguration ()V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/VerifyPluginProjectConfigurationTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/VerifyPluginProjectConfigurationTask$Companion$register$1$inlined$sam$i$org_gradle_api_Action$0 : org/gradle/api/Action {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public final synthetic fun execute (Ljava/lang/Object;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/VerifyPluginSignatureTask : org/gradle/api/tasks/JavaExec, org/jetbrains/intellij/platform/gradle/tasks/aware/SigningAware {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginSignatureTask$Companion;
	public fun <init> ()V
	public fun exec ()V
	public abstract fun getCertificateChain ()Lorg/gradle/api/provider/Property;
	public abstract fun getCertificateChainFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getInputArchiveFile ()Lorg/gradle/api/file/RegularFileProperty;
}

public final class org/jetbrains/intellij/platform/gradle/tasks/VerifyPluginSignatureTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/VerifyPluginStructureTask : org/gradle/api/DefaultTask {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginStructureTask$Companion;
	public fun <init> ()V
	public abstract fun getIgnoreFailures ()Lorg/gradle/api/provider/Property;
	public abstract fun getIgnoreUnacceptableWarnings ()Lorg/gradle/api/provider/Property;
	public abstract fun getIgnoreWarnings ()Lorg/gradle/api/provider/Property;
	public abstract fun getPluginDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public final fun verifyPlugin ()V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/VerifyPluginStructureTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask : org/gradle/api/tasks/JavaExec, org/jetbrains/intellij/platform/gradle/tasks/aware/PluginVerifierAware, org/jetbrains/intellij/platform/gradle/tasks/aware/RuntimeAware {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$Companion;
	public fun <init> ()V
	public fun exec ()V
	public abstract fun getArchiveFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getExternalPrefixes ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getFailureLevel ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getFreeArgs ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getIdes ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getIgnoredProblemsFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getOffline ()Lorg/gradle/api/provider/Property;
	public abstract fun getSubsystemsToCheck ()Lorg/gradle/api/provider/Property;
	public abstract fun getTeamCityOutputFormat ()Lorg/gradle/api/provider/Property;
	public abstract fun getVerificationReportsDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getVerificationReportsFormats ()Lorg/gradle/api/provider/ListProperty;
}

public final class org/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$FailureLevel : java/lang/Enum {
	public static final field ALL Ljava/util/EnumSet;
	public static final field COMPATIBILITY_PROBLEMS Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$FailureLevel;
	public static final field COMPATIBILITY_WARNINGS Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$FailureLevel;
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$FailureLevel$Companion;
	public static final field DEPRECATED_API_USAGES Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$FailureLevel;
	public static final field EXPERIMENTAL_API_USAGES Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$FailureLevel;
	public static final field INTERNAL_API_USAGES Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$FailureLevel;
	public static final field INVALID_PLUGIN Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$FailureLevel;
	public static final field MISSING_DEPENDENCIES Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$FailureLevel;
	public static final field NONE Ljava/util/EnumSet;
	public static final field NON_EXTENDABLE_API_USAGES Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$FailureLevel;
	public static final field NOT_DYNAMIC Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$FailureLevel;
	public static final field OVERRIDE_ONLY_API_USAGES Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$FailureLevel;
	public static final field PLUGIN_STRUCTURE_WARNINGS Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$FailureLevel;
	public static final field SCHEDULED_FOR_REMOVAL_API_USAGES Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$FailureLevel;
	public final fun getMessage ()Ljava/lang/String;
	public final fun getSectionHeading ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$FailureLevel;
	public static fun values ()[Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$FailureLevel;
}

public final class org/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$FailureLevel$Companion {
}

public final class org/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$Subsystems : java/lang/Enum {
	public static final field ALL Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$Subsystems;
	public static final field ANDROID_ONLY Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$Subsystems;
	public static final field WITHOUT_ANDROID Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$Subsystems;
	public fun toString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$Subsystems;
	public static fun values ()[Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$Subsystems;
}

public final class org/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$VerificationReportsFormats : java/lang/Enum {
	public static final field ALL Ljava/util/EnumSet;
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$VerificationReportsFormats$Companion;
	public static final field HTML Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$VerificationReportsFormats;
	public static final field MARKDOWN Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$VerificationReportsFormats;
	public static final field NONE Ljava/util/EnumSet;
	public static final field PLAIN Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$VerificationReportsFormats;
	public fun toString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$VerificationReportsFormats;
	public static fun values ()[Lorg/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$VerificationReportsFormats;
}

public final class org/jetbrains/intellij/platform/gradle/tasks/VerifyPluginTask$VerificationReportsFormats$Companion {
}

public abstract interface class org/jetbrains/intellij/platform/gradle/tasks/aware/AutoReloadAware {
	public abstract fun getAutoReload ()Lorg/gradle/api/provider/Property;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/tasks/aware/CoroutinesJavaAgentAware {
	public abstract fun getCoroutinesJavaAgentFile ()Lorg/gradle/api/file/RegularFileProperty;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/tasks/aware/IntelliJPlatformVersionAware {
	public abstract fun getIntelliJPlatformConfiguration ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getIntelliJPlatformPluginConfiguration ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public fun getPlatformPath ()Ljava/nio/file/Path;
	public fun getProductInfo ()Lorg/jetbrains/intellij/platform/gradle/models/ProductInfo;
	public fun validateIntelliJPlatformVersion ()V
}

public abstract interface class org/jetbrains/intellij/platform/gradle/tasks/aware/JavaCompilerAware {
	public abstract fun getJavaCompilerConfiguration ()Lorg/gradle/api/file/ConfigurableFileCollection;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/tasks/aware/KotlinMetadataAware {
	public abstract fun getKotlinApiVersion ()Lorg/gradle/api/provider/Property;
	public abstract fun getKotlinJvmTarget ()Lorg/gradle/api/provider/Property;
	public abstract fun getKotlinLanguageVersion ()Lorg/gradle/api/provider/Property;
	public abstract fun getKotlinPluginAvailable ()Lorg/gradle/api/provider/Property;
	public abstract fun getKotlinStdlibDefaultDependency ()Lorg/gradle/api/provider/Property;
	public abstract fun getKotlinVersion ()Lorg/gradle/api/provider/Property;
	public abstract fun getKotlinxCoroutinesLibraryPresent ()Lorg/gradle/api/provider/Property;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/tasks/aware/PluginAware {
	public abstract fun getPluginXml ()Lorg/gradle/api/file/RegularFileProperty;
}

public final class org/jetbrains/intellij/platform/gradle/tasks/aware/PluginAwareKt {
	public static final fun parse (Ljava/nio/file/Path;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun parse (Lorg/gradle/api/file/RegularFile;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun parse (Lorg/gradle/api/provider/Provider;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/provider/Provider;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/tasks/aware/PluginVerifierAware {
	public abstract fun getPluginVerifierExecutable ()Lorg/gradle/api/file/RegularFileProperty;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/tasks/aware/RunnableIdeAware : org/gradle/process/JavaForkOptions, org/jetbrains/intellij/platform/gradle/tasks/aware/AutoReloadAware, org/jetbrains/intellij/platform/gradle/tasks/aware/CoroutinesJavaAgentAware, org/jetbrains/intellij/platform/gradle/tasks/aware/PluginAware, org/jetbrains/intellij/platform/gradle/tasks/aware/RuntimeAware, org/jetbrains/intellij/platform/gradle/tasks/aware/SandboxAware {
}

public abstract interface class org/jetbrains/intellij/platform/gradle/tasks/aware/RuntimeAware : org/jetbrains/intellij/platform/gradle/tasks/aware/IntelliJPlatformVersionAware {
	public abstract fun getRuntimeArchitecture ()Lorg/gradle/api/provider/Property;
	public abstract fun getRuntimeDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getRuntimeLauncher ()Lorg/gradle/api/provider/Property;
	public abstract fun getRuntimeMetadata ()Lorg/gradle/api/provider/MapProperty;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/tasks/aware/SandboxAware : org/jetbrains/intellij/platform/gradle/tasks/aware/SandboxStructure {
	public fun applySandboxFrom (Lorg/gradle/api/Task;Lorg/gradle/api/tasks/TaskProvider;)V
}

public abstract interface class org/jetbrains/intellij/platform/gradle/tasks/aware/SandboxStructure {
	public abstract fun getSandboxConfigDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getSandboxDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getSandboxLogDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getSandboxPluginsDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getSandboxSystemDirectory ()Lorg/gradle/api/file/DirectoryProperty;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/tasks/aware/SigningAware {
	public abstract fun getZipSignerExecutable ()Lorg/gradle/api/file/RegularFileProperty;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/tasks/aware/SplitModeAware : org/jetbrains/intellij/platform/gradle/tasks/aware/IntelliJPlatformVersionAware, org/jetbrains/intellij/platform/gradle/tasks/aware/SandboxStructure {
	public abstract fun getSandboxConfigFrontendDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getSandboxLogFrontendDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getSandboxPluginsFrontendDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getSandboxSystemFrontendDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getSplitMode ()Lorg/gradle/api/provider/Property;
	public fun getSplitModeFrontendProperties ()Lorg/gradle/api/provider/Provider;
	public abstract fun getSplitModeTarget ()Lorg/gradle/api/provider/Property;
	public fun validateSplitModeSupport ()V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/aware/SplitModeAware$SplitModeTarget : java/lang/Enum {
	public static final field BACKEND Lorg/jetbrains/intellij/platform/gradle/tasks/aware/SplitModeAware$SplitModeTarget;
	public static final field BOTH Lorg/jetbrains/intellij/platform/gradle/tasks/aware/SplitModeAware$SplitModeTarget;
	public static final field FRONTEND Lorg/jetbrains/intellij/platform/gradle/tasks/aware/SplitModeAware$SplitModeTarget;
	public final fun includes (Lorg/jetbrains/intellij/platform/gradle/tasks/aware/SplitModeAware$SplitModeTarget;)Z
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/tasks/aware/SplitModeAware$SplitModeTarget;
	public static fun values ()[Lorg/jetbrains/intellij/platform/gradle/tasks/aware/SplitModeAware$SplitModeTarget;
}

public abstract interface class org/jetbrains/intellij/platform/gradle/tasks/aware/TestableAware : org/jetbrains/intellij/platform/gradle/tasks/aware/CoroutinesJavaAgentAware, org/jetbrains/intellij/platform/gradle/tasks/aware/RuntimeAware, org/jetbrains/intellij/platform/gradle/tasks/aware/SandboxAware {
}

public final class org/jetbrains/intellij/platform/gradle/tasks/companion/JarCompanion {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/companion/JarCompanion$Companion;
	public fun <init> ()V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/companion/JarCompanion$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public final fun applyPluginManifest (Lorg/gradle/jvm/tasks/Jar;)V
	public fun register (Lorg/gradle/api/Project;)V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/companion/ProcessResourcesCompanion {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/companion/ProcessResourcesCompanion$Companion;
	public fun <init> ()V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/companion/ProcessResourcesCompanion$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/companion/TestCompanion {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/tasks/companion/TestCompanion$Companion;
	public fun <init> ()V
}

public final class org/jetbrains/intellij/platform/gradle/tasks/companion/TestCompanion$Companion : org/jetbrains/intellij/platform/gradle/tasks/Registrable {
	public fun register (Lorg/gradle/api/Project;)V
}

public abstract interface class org/jetbrains/intellij/platform/gradle/utils/IdeServicesPluginRepositoryService : org/jetbrains/intellij/pluginRepository/internal/api/PluginRepositoryService {
	public abstract fun uploadById (ILokhttp3/RequestBody;Lokhttp3/RequestBody;ZLokhttp3/MultipartBody$Part;)Lretrofit2/Call;
	public abstract fun uploadByStringId (Lokhttp3/RequestBody;Lokhttp3/RequestBody;Lokhttp3/RequestBody;ZLokhttp3/MultipartBody$Part;)Lretrofit2/Call;
}

public final class org/jetbrains/intellij/platform/gradle/utils/Logger {
	public fun <init> (Ljava/lang/Class;)V
	public final fun debug (Ljava/lang/String;Ljava/lang/Throwable;)V
	public static synthetic fun debug$default (Lorg/jetbrains/intellij/platform/gradle/utils/Logger;Ljava/lang/String;Ljava/lang/Throwable;ILjava/lang/Object;)V
	public final fun error (Ljava/lang/String;Ljava/lang/Throwable;)V
	public static synthetic fun error$default (Lorg/jetbrains/intellij/platform/gradle/utils/Logger;Ljava/lang/String;Ljava/lang/Throwable;ILjava/lang/Object;)V
	public final fun info (Ljava/lang/String;Ljava/lang/Throwable;)V
	public static synthetic fun info$default (Lorg/jetbrains/intellij/platform/gradle/utils/Logger;Ljava/lang/String;Ljava/lang/Throwable;ILjava/lang/Object;)V
	public final fun lifecycle (Ljava/lang/String;Ljava/lang/Throwable;)V
	public static synthetic fun lifecycle$default (Lorg/jetbrains/intellij/platform/gradle/utils/Logger;Ljava/lang/String;Ljava/lang/Throwable;ILjava/lang/Object;)V
	public final fun quiet (Ljava/lang/String;Ljava/lang/Throwable;)V
	public static synthetic fun quiet$default (Lorg/jetbrains/intellij/platform/gradle/utils/Logger;Ljava/lang/String;Ljava/lang/Throwable;ILjava/lang/Object;)V
	public final fun trace (Ljava/lang/String;Ljava/lang/Throwable;)V
	public static synthetic fun trace$default (Lorg/jetbrains/intellij/platform/gradle/utils/Logger;Ljava/lang/String;Ljava/lang/Throwable;ILjava/lang/Object;)V
	public final fun warn (Ljava/lang/String;Ljava/lang/Throwable;)V
	public static synthetic fun warn$default (Lorg/jetbrains/intellij/platform/gradle/utils/Logger;Ljava/lang/String;Ljava/lang/Throwable;ILjava/lang/Object;)V
}

public final class org/jetbrains/intellij/platform/gradle/utils/PlatformJavaVersionsKt {
	public static final fun getPlatformJavaVersions ()Ljava/util/Map;
}

public final class org/jetbrains/intellij/platform/gradle/utils/PlatformKotlinVersionsKt {
	public static final fun getPlatformKotlinVersions ()Ljava/util/Map;
}

public final class org/jetbrains/intellij/platform/gradle/utils/UtilsKt {
	public static final fun getAsPath (Lorg/gradle/api/file/FileSystemLocation;)Ljava/nio/file/Path;
	public static final fun getExtensionProvider (Lorg/gradle/api/Project;)Lorg/gradle/api/provider/Provider;
	public static final fun getRootProjectPath (Lorg/gradle/api/Project;)Ljava/nio/file/Path;
	public static final fun getSettings (Lorg/gradle/api/Project;)Lorg/gradle/api/internal/SettingsInternal;
	public static final fun isSpecified (Lorg/gradle/api/provider/Property;)Z
	public static final fun platformPath (Lorg/gradle/api/file/FileCollection;)Ljava/nio/file/Path;
}

public final class org/jetbrains/intellij/platform/gradle/utils/Version : java/lang/Comparable {
	public static final field Companion Lorg/jetbrains/intellij/platform/gradle/utils/Version$Companion;
	public fun <init> ()V
	public fun <init> (IIILjava/lang/String;)V
	public synthetic fun <init> (IIILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun compareTo (Lorg/jetbrains/intellij/platform/gradle/utils/Version;)I
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMajor ()I
	public final fun getMinor ()I
	public final fun getPatch ()I
	public final fun getVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/intellij/platform/gradle/utils/Version$Companion {
	public final fun parse (Ljava/lang/String;)Lorg/jetbrains/intellij/platform/gradle/utils/Version;
}

